import { Node, ResolvedPos } from 'prosemirror-model';
import { EditorState, PluginKey } from 'prosemirror-state';
export declare const reAnyValue: RegExp;
export declare const parseStyle: (styleText: string | null) => {
    [x: string]: string;
};
export declare function setNodeStyle(nodeAttrs: any, styleType: string, value: string): any;
export declare const tableResizeKey: PluginKey<any>;
export declare const tableColumnResizeKey: PluginKey<any>;
export declare const tableRowResizeKey: PluginKey<any>;
export declare function otherResizing(current: PluginKey, state: EditorState): boolean;
export declare function otherResizeHandle(current: PluginKey, state: EditorState): boolean;
export declare function getTable(dom: HTMLElement): HTMLTableElement;
export declare function domCellAround(target: any): HTMLTableCellElement | null;
export declare function cellIndexes(cell: HTMLTableCellElement): {
    cellIndex: number;
    rowIndex: number;
};
export declare function parentNode(pos: ResolvedPos, predicate: (node: Node) => boolean): {
    node: Node;
    depth: number;
} | null;

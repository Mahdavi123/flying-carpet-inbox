{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nlet store;\nexport function configureStore(initialState) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const localstore = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n  sagaMiddleware.run(rootSaga);\n  store = localstore;\n  return localstore;\n} // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"sources":["D:/workspace/flying-assess/flyingcarpet-shared-inbox/src/redux/store.ts"],"names":["createStore","compose","applyMiddleware","createSagaMiddleware","reducers","rootSaga","sagaMiddleware","middlewares","store","configureStore","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","localstore","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,SAArB;AAQA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,IAAIE,KAAJ;AAEA,OAAO,SAASC,cAAT,CAAwBC,YAAxB,EAA0C;AAC7C,QAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CZ,OAAxE;AAEA,QAAMa,UAAU,GAAGd,WAAW,CAACI,QAAD,EAAWM,YAAX,EAAyBC,gBAAgB,CAACT,eAAe,CAAC,GAAGK,WAAJ,CAAhB,CAAzC,CAA9B;AACAD,EAAAA,cAAc,CAACS,GAAf,CAAmBV,QAAnB;AACAG,EAAAA,KAAK,GAAGM,UAAR;AACA,SAAOA,UAAP;AACH,C,CAED","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport rootSaga from './sagas';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\nlet store: any;\r\n\r\nexport function configureStore(initialState: {}) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const localstore = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\r\n    sagaMiddleware.run(rootSaga);\r\n    store = localstore;\r\n    return localstore;\r\n}\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n"]},"metadata":{},"sourceType":"module"}
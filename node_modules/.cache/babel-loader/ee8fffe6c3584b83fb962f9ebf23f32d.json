{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\flying-assess\\\\flyingcarpet-shared-inbox\\\\src\\\\components\\\\Tasks.tsx\";\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'; // components\n\nimport Scrollbar from './Scrollbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = ({\n  tasks\n}) => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: \"btn btn-primary btn-sm float-end\",\n        children: \"View All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-4 header-title\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n        style: {\n          maxHeight: '352px'\n        },\n        className: \"px-1\",\n        children: (tasks || []).map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: \"task1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"task1\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"fs-13 text-muted\",\n                children: [\"Due on \", item.dueDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["D:/workspace/flying-assess/flyingcarpet-shared-inbox/src/components/Tasks.tsx"],"names":["React","Card","Link","Scrollbar","Tasks","tasks","maxHeight","map","item","index","title","dueDate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAYA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AACrC,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,kCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAlB;AAA0C,QAAA,SAAS,EAAC,MAApD;AAAA,kBACK,CAACD,KAAK,IAAI,EAAV,EAAcE,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,8BACI;AAAiB,YAAA,SAAS,EAAC,MAA3B;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACI;AAAO,gBAAA,IAAI,EAAC,UAAZ;AAAuB,gBAAA,SAAS,EAAC,kBAAjC;AAAoD,gBAAA,EAAE,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,SAAS,EAAC,kBAAjB;AAAoC,gBAAA,OAAO,EAAC,OAA5C;AAAA,0BACKD,IAAI,CAACE;AADV;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAKI;AAAG,gBAAA,SAAS,EAAC,kBAAb;AAAA,sCAAwCF,IAAI,CAACG,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAWH,SAZA;AADL;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA3BD;;KAAML,K;AA6BN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// components\r\nimport Scrollbar from './Scrollbar';\r\n\r\nexport interface TaskItemTypes {\r\n    id: number;\r\n    title: string;\r\n    dueDate: string;\r\n}\r\n\r\ninterface TasksProps {\r\n    tasks: TaskItemTypes[];\r\n}\r\n\r\nconst Tasks = ({ tasks }: TasksProps) => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Link to=\"#\" className=\"btn btn-primary btn-sm float-end\">\r\n                    View All\r\n                </Link>\r\n                <h5 className=\"mb-4 header-title\">Tasks</h5>\r\n\r\n                <Scrollbar style={{ maxHeight: '352px' }} className=\"px-1\">\r\n                    {(tasks || []).map((item, index) => {\r\n                        return (\r\n                            <div key={index} className=\"mt-2\">\r\n                                <div className=\"form-check\">\r\n                                    <input type=\"checkbox\" className=\"form-check-input\" id=\"task1\" />\r\n                                    <label className=\"form-check-label\" htmlFor=\"task1\">\r\n                                        {item.title}\r\n                                    </label>\r\n                                    <p className=\"fs-13 text-muted\">Due on {item.dueDate}</p>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </Scrollbar>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Tasks;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\flying-assess\\\\flyingcarpet-shared-inbox\\\\src\\\\pages\\\\charts\\\\ColumnDataLabelsChart.tsx\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n// components\nimport Loader from '../../components/Loader'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ColumnDataLabelsChart = ({\n  columnChartData,\n  showLoader\n}) => {\n  const options = {\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          position: 'top' // top, center, bottom\n\n        }\n      }\n    },\n    dataLabels: {\n      enabled: true,\n      formatter: val => {\n        return val + '%';\n      },\n      offsetY: -30,\n      style: {\n        fontSize: '12px',\n        colors: ['#304758']\n      }\n    },\n    xaxis: {\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      position: 'top',\n      labels: {\n        offsetY: -18\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      crosshairs: {\n        fill: {\n          type: 'gradient',\n          gradient: {\n            colorFrom: '#D8E3F0',\n            colorTo: '#BED1E6',\n            stops: [0, 100],\n            opacityFrom: 0.4,\n            opacityTo: 0.5\n          }\n        }\n      },\n      tooltip: {\n        enabled: true,\n        offsetY: -35\n      }\n    },\n    fill: {\n      gradient: {\n        shade: 'light',\n        type: 'horizontal',\n        shadeIntensity: 0.25,\n        gradientToColors: undefined,\n        inverseColors: true,\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [50, 0, 100, 100]\n      }\n    },\n    yaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false,\n        formatter: val => {\n          return val + '%';\n        }\n      }\n    },\n    title: {\n      text: 'Monthly Inflation in Argentina, 2002',\n      floating: true,\n      offsetY: 350,\n      align: 'center',\n      style: {\n        color: '#444'\n      }\n    },\n    grid: {\n      row: {\n        colors: ['transparent', 'transparent'],\n        // takes an array which will be repeated on columns\n        opacity: 0.2\n      },\n      borderColor: '#f1f3fa'\n    }\n  };\n  const series = [{\n    name: 'Inflation',\n    data: columnChartData.data || []\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mt-0 mb-3\",\n        children: \"Column Chart with Datalabels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), showLoader ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 380,\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Chart, {\n        options: options,\n        series: series,\n        type: \"bar\",\n        height: 380,\n        className: \"apex-charts\",\n        dir: \"ltr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ColumnDataLabelsChart;\nexport default ColumnDataLabelsChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColumnDataLabelsChart\");","map":{"version":3,"sources":["D:/workspace/flying-assess/flyingcarpet-shared-inbox/src/pages/charts/ColumnDataLabelsChart.tsx"],"names":["React","Chart","Card","Loader","ColumnDataLabelsChart","columnChartData","showLoader","options","plotOptions","bar","dataLabels","position","enabled","formatter","val","offsetY","style","fontSize","colors","xaxis","categories","labels","axisBorder","show","axisTicks","crosshairs","fill","type","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","tooltip","shade","shadeIntensity","gradientToColors","undefined","inverseColors","yaxis","title","text","floating","align","color","grid","row","opacity","borderColor","series","name","data","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { Card } from 'react-bootstrap';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../components/Loader';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface ColumnDataLabelsChartProps {\r\n    columnChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst ColumnDataLabelsChart = ({ columnChartData, showLoader }: ColumnDataLabelsChartProps) => {\r\n    const options: ApexOptions = {\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    position: 'top', // top, center, bottom\r\n                },\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n            formatter: (val: number) => {\r\n                return val + '%';\r\n            },\r\n            offsetY: -30,\r\n            style: {\r\n                fontSize: '12px',\r\n                colors: ['#304758'],\r\n            },\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            position: 'top',\r\n            labels: {\r\n                offsetY: -18,\r\n            },\r\n            axisBorder: {\r\n                show: false,\r\n            },\r\n            axisTicks: {\r\n                show: false,\r\n            },\r\n            crosshairs: {\r\n                fill: {\r\n                    type: 'gradient',\r\n                    gradient: {\r\n                        colorFrom: '#D8E3F0',\r\n                        colorTo: '#BED1E6',\r\n                        stops: [0, 100],\r\n                        opacityFrom: 0.4,\r\n                        opacityTo: 0.5,\r\n                    },\r\n                },\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n                offsetY: -35,\r\n            },\r\n        },\r\n        fill: {\r\n            gradient: {\r\n                shade: 'light',\r\n                type: 'horizontal',\r\n                shadeIntensity: 0.25,\r\n                gradientToColors: undefined,\r\n                inverseColors: true,\r\n                opacityFrom: 1,\r\n                opacityTo: 1,\r\n                stops: [50, 0, 100, 100],\r\n            },\r\n        },\r\n        yaxis: {\r\n            axisBorder: {\r\n                show: false,\r\n            },\r\n            axisTicks: {\r\n                show: false,\r\n            },\r\n            labels: {\r\n                show: false,\r\n                formatter: (val: number) => {\r\n                    return val + '%';\r\n                },\r\n            },\r\n        },\r\n        title: {\r\n            text: 'Monthly Inflation in Argentina, 2002',\r\n            floating: true,\r\n            offsetY: 350,\r\n            align: 'center',\r\n            style: {\r\n                color: '#444',\r\n            },\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.2,\r\n            },\r\n            borderColor: '#f1f3fa',\r\n        },\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            name: 'Inflation',\r\n            data: columnChartData.data || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mt-0 mb-3\">Column Chart with Datalabels</h4>\r\n                {showLoader ? (\r\n                    <div style={{ height: 380, position: 'relative' }}>\r\n                        <Loader />\r\n                    </div>\r\n                ) : (\r\n                    <Chart\r\n                        options={options}\r\n                        series={series}\r\n                        type=\"bar\"\r\n                        height={380}\r\n                        className=\"apex-charts\"\r\n                        dir=\"ltr\"\r\n                    />\r\n                )}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ColumnDataLabelsChart;\r\n"]},"metadata":{},"sourceType":"module"}
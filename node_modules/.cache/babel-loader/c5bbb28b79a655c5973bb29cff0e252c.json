{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\flyingcarpet\\\\flyingcarpet-shared-inbox\\\\src\\\\layouts\\\\RightSidebar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // actions\n\nimport { hideRightSidebar } from '../redux/actions'; // store\n\n// components\nimport ThemeCustomizer from '../components/ThemeCustomizer/';\nimport Scrollbar from '../components/Scrollbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RightSideBar = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const rightBarNodeRef = useRef(null);\n  const {\n    isOpenRightSideBar\n  } = useSelector(state => ({\n    isOpenRightSideBar: state.Layout.isOpenRightSideBar\n  }));\n  /**\r\n   * Handle the click anywhere in doc\r\n   */\n\n  const handleOtherClick = useCallback(e => {\n    if (isOpenRightSideBar) {\n      if (rightBarNodeRef && rightBarNodeRef.current && rightBarNodeRef.current.contains(e.target)) {\n        return;\n      } else {\n        dispatch(hideRightSidebar());\n      }\n    }\n  }, [rightBarNodeRef, dispatch, isOpenRightSideBar]);\n  useEffect(() => {\n    document.addEventListener('mousedown', handleOtherClick, false);\n    return () => {\n      document.removeEventListener('mousedown', handleOtherClick, false);\n    };\n  }, [handleOtherClick]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-bar\",\n      ref: rightBarNodeRef,\n      children: /*#__PURE__*/_jsxDEV(Scrollbar, {\n        style: {\n          maxHeight: '100%',\n          zIndex: 10000\n        },\n        timeout: 500,\n        scrollbarMaxSize: 320,\n        children: /*#__PURE__*/_jsxDEV(ThemeCustomizer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightbar-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RightSideBar, \"EfApciaY0oZCIfftd9CGU83JCu4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RightSideBar;\nexport default RightSideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightSideBar\");","map":{"version":3,"sources":["D:/workspace/flyingcarpet/flyingcarpet-shared-inbox/src/layouts/RightSidebar.tsx"],"names":["React","useCallback","useEffect","useRef","useDispatch","useSelector","hideRightSidebar","ThemeCustomizer","Scrollbar","RightSideBar","props","dispatch","rightBarNodeRef","isOpenRightSideBar","state","Layout","handleOtherClick","e","current","contains","target","document","addEventListener","removeEventListener","maxHeight","zIndex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,MAAxC,QAAsD,OAAtD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,kBAAjC,C,CAEA;;AAGA;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAQA,MAAMC,YAAY,GAAIC,KAAD,IAA8B;AAAA;;AAC/C,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,eAAoB,GAAGT,MAAM,CAAC,IAAD,CAAnC;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAyBR,WAAW,CAAES,KAAD,KAAuB;AAC9DD,IAAAA,kBAAkB,EAAEC,KAAK,CAACC,MAAN,CAAaF;AAD6B,GAAvB,CAAD,CAA1C;AAIA;AACJ;AACA;;AACI,QAAMG,gBAAgB,GAAGf,WAAW,CAC/BgB,CAAD,IAAY;AACR,QAAIJ,kBAAJ,EAAwB;AACpB,UAAID,eAAe,IAAIA,eAAe,CAACM,OAAnC,IAA8CN,eAAe,CAACM,OAAhB,CAAwBC,QAAxB,CAAiCF,CAAC,CAACG,MAAnC,CAAlD,EAA8F;AAC1F;AACH,OAFD,MAEO;AACHT,QAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACH;AACJ;AACJ,GAT+B,EAUhC,CAACM,eAAD,EAAkBD,QAAlB,EAA4BE,kBAA5B,CAVgC,CAApC;AAaAX,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,gBAAvC,EAAyD,KAAzD;AACA,WAAO,MAAM;AACTK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,gBAA1C,EAA4D,KAA5D;AACH,KAFD;AAGH,GALQ,EAKN,CAACA,gBAAD,CALM,CAAT;AAOA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEJ,eAAhC;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEY,UAAAA,SAAS,EAAE,MAAb;AAAqBC,UAAAA,MAAM,EAAE;AAA7B,SAAlB;AAAwD,QAAA,OAAO,EAAE,GAAjE;AAAsE,QAAA,gBAAgB,EAAE,GAAxF;AAAA,+BACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAzCD;;GAAMhB,Y;UACeL,W,EAGcC,W;;;KAJ7BI,Y;AA2CN,eAAeA,YAAf","sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// actions\r\nimport { hideRightSidebar } from '../redux/actions';\r\n\r\n// store\r\nimport { AppDispatch, RootState } from '../redux/store';\r\n\r\n// components\r\nimport ThemeCustomizer from '../components/ThemeCustomizer/';\r\nimport Scrollbar from '../components/Scrollbar';\r\n\r\ninterface RightSideBarProps {\r\n    hideRightSidebar?: () => void;\r\n    title?: string;\r\n    children?: any;\r\n}\r\n\r\nconst RightSideBar = (props: RightSideBarProps) => {\r\n    const dispatch = useDispatch<AppDispatch>();\r\n    const rightBarNodeRef: any = useRef(null);\r\n\r\n    const { isOpenRightSideBar } = useSelector((state: RootState) => ({\r\n        isOpenRightSideBar: state.Layout.isOpenRightSideBar,\r\n    }));\r\n\r\n    /**\r\n     * Handle the click anywhere in doc\r\n     */\r\n    const handleOtherClick = useCallback(\r\n        (e: any) => {\r\n            if (isOpenRightSideBar) {\r\n                if (rightBarNodeRef && rightBarNodeRef.current && rightBarNodeRef.current.contains(e.target)) {\r\n                    return;\r\n                } else {\r\n                    dispatch(hideRightSidebar());\r\n                }\r\n            }\r\n        },\r\n        [rightBarNodeRef, dispatch, isOpenRightSideBar]\r\n    );\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleOtherClick, false);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleOtherClick, false);\r\n        };\r\n    }, [handleOtherClick]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"right-bar\" ref={rightBarNodeRef}>\r\n                <Scrollbar style={{ maxHeight: '100%', zIndex: 10000 }} timeout={500} scrollbarMaxSize={320}>\r\n                    <ThemeCustomizer />\r\n                </Scrollbar>\r\n            </div>\r\n            <div className=\"rightbar-overlay\"></div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RightSideBar;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\flyingcarpet\\\\flyingcarpet-shared-inbox\\\\src\\\\components\\\\NotificationDropdown.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport FeatherIcon from 'feather-icons-react'; // types\n\n// components\nimport Scrollbar from './Scrollbar'; // notifiaction continer styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst notificationContainerStyle = {\n  maxHeight: '230px',\n  display: 'none'\n};\nconst notificationShowContainerStyle = {\n  maxHeight: '230px'\n};\n\nconst NotificationDropdown = props => {\n  _s();\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [notificationContentStyle, setNotificationContentStyles] = useState(notificationContainerStyle);\n  /*\r\n   * toggle notification-dropdown\r\n   */\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n    setNotificationContentStyles(notificationContentStyle === notificationContainerStyle ? notificationShowContainerStyle : notificationContainerStyle);\n  };\n  /*\r\n   * get redirect url for notification items\r\n   */\n\n\n  const getRedirectUrl = item => {\n    return `/notification/${item.id}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    show: dropdownOpen,\n    onToggle: toggleDropdown,\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      id: \"dropdown-notification\",\n      as: \"a\",\n      onClick: toggleDropdown,\n      className: classNames('nav-link', 'position-relative', 'cursor-pointer', {\n        show: dropdownOpen\n      }),\n      children: [/*#__PURE__*/_jsxDEV(FeatherIcon, {\n        icon: \"bell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge bg-danger rounded-circle noti-icon-badge\",\n        children: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      className: \"dropdown-menu-end dropdown-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item noti-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"m-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"float-end\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                className: \"text-dark\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Clear All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), \"Notification\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n          className: \"noti-scroll\",\n          style: notificationContentStyle,\n          children: (props.notifications || []).map((item, i) => {\n            return /*#__PURE__*/_jsxDEV(Link, {\n              to: getRedirectUrl(item),\n              className: \"dropdown-item notify-item border-bottom\",\n              children: item.avatar ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"notify-icon\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.avatar,\n                    alt: \"\",\n                    className: \"img-fluid rounded-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"notify-details\",\n                  children: item.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-muted mb-0 user-msg\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: item.subText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `notify-icon bg-${item.bgColor}`,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: item.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"notify-details\",\n                  children: [item.text, \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-muted\",\n                    children: item.subText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, i + '-noti', false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"dropdown-item text-center text-primary notify-item notify-all\",\n          children: [\"View All \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fe-arrow-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotificationDropdown, \"rWRUkQT4DnU3nuu9BBqapjZB7bw=\");\n\n_c = NotificationDropdown;\nexport default NotificationDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDropdown\");","map":{"version":3,"sources":["D:/workspace/flyingcarpet/flyingcarpet-shared-inbox/src/components/NotificationDropdown.tsx"],"names":["React","useState","Link","Dropdown","classNames","FeatherIcon","Scrollbar","notificationContainerStyle","maxHeight","display","notificationShowContainerStyle","NotificationDropdown","props","dropdownOpen","setDropdownOpen","notificationContentStyle","setNotificationContentStyles","toggleDropdown","getRedirectUrl","item","id","show","notifications","map","i","avatar","text","subText","bgColor","icon"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\nimport FeatherIcon from 'feather-icons-react';\r\n\r\n// types\r\nimport { NotificationItem } from '../layouts/Topbar';\r\n\r\n// components\r\nimport Scrollbar from './Scrollbar';\r\n\r\n// notifiaction continer styles\r\nconst notificationContainerStyle = {\r\n    maxHeight: '230px',\r\n    display: 'none',\r\n};\r\n\r\nconst notificationShowContainerStyle = {\r\n    maxHeight: '230px',\r\n};\r\n\r\ninterface NotificationDropdownProps {\r\n    notifications: Array<NotificationItem>;\r\n}\r\n\r\ninterface NotificationContainerStyle {\r\n    maxHeight?: string;\r\n    display?: string;\r\n}\r\n\r\nconst NotificationDropdown = (props: NotificationDropdownProps) => {\r\n    const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\r\n    const [notificationContentStyle, setNotificationContentStyles] =\r\n        useState<NotificationContainerStyle>(notificationContainerStyle);\r\n\r\n    /*\r\n     * toggle notification-dropdown\r\n     */\r\n    const toggleDropdown = () => {\r\n        setDropdownOpen(!dropdownOpen);\r\n        setNotificationContentStyles(\r\n            notificationContentStyle === notificationContainerStyle\r\n                ? notificationShowContainerStyle\r\n                : notificationContainerStyle\r\n        );\r\n    };\r\n\r\n    /*\r\n     * get redirect url for notification items\r\n     */\r\n    const getRedirectUrl = (item: NotificationItem) => {\r\n        return `/notification/${item.id}`;\r\n    };\r\n\r\n    return (\r\n        <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\r\n            <Dropdown.Toggle\r\n                id=\"dropdown-notification\"\r\n                as=\"a\"\r\n                onClick={toggleDropdown}\r\n                className={classNames('nav-link', 'position-relative', 'cursor-pointer', {\r\n                    show: dropdownOpen,\r\n                })}>\r\n                <FeatherIcon icon=\"bell\" />\r\n                <span className=\"badge bg-danger rounded-circle noti-icon-badge\">6</span>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu className=\"dropdown-menu-end dropdown-lg\">\r\n                <div onClick={toggleDropdown}>\r\n                    <div className=\"dropdown-item noti-title\">\r\n                        <h5 className=\"m-0\">\r\n                            <span className=\"float-end\">\r\n                                <Link to=\"#\" className=\"text-dark\">\r\n                                    <small>Clear All</small>\r\n                                </Link>\r\n                            </span>\r\n                            Notification\r\n                        </h5>\r\n                    </div>\r\n                    <Scrollbar className=\"noti-scroll\" style={notificationContentStyle}>\r\n                        {(props.notifications || []).map((item, i) => {\r\n                            return (\r\n                                <Link\r\n                                    to={getRedirectUrl(item)}\r\n                                    className=\"dropdown-item notify-item border-bottom\"\r\n                                    key={i + '-noti'}>\r\n                                    {item.avatar ? (\r\n                                        <>\r\n                                            <div className=\"notify-icon\">\r\n                                                <img src={item.avatar} alt=\"\" className=\"img-fluid rounded-circle\" />\r\n                                            </div>\r\n                                            <p className=\"notify-details\">{item.text}</p>\r\n                                            <p className=\"text-muted mb-0 user-msg\">\r\n                                                <small>{item.subText}</small>\r\n                                            </p>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <div className={`notify-icon bg-${item.bgColor}`}>\r\n                                                <i className={item.icon}></i>\r\n                                            </div>\r\n                                            <p className=\"notify-details\">\r\n                                                {item.text} <small className=\"text-muted\">{item.subText}</small>\r\n                                            </p>\r\n                                        </>\r\n                                    )}\r\n                                </Link>\r\n                            );\r\n                        })}\r\n                    </Scrollbar>\r\n\r\n                    <Link to=\"/\" className=\"dropdown-item text-center text-primary notify-item notify-all\">\r\n                        View All <i className=\"fe-arrow-right\"></i>\r\n                    </Link>\r\n                </div>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    );\r\n};\r\n\r\nexport default NotificationDropdown;\r\n"]},"metadata":{},"sourceType":"module"}
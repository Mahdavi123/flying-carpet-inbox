{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\flying-assess\\\\flyingcarpet-shared-inbox\\\\src\\\\components\\\\FileUploader.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport Dropzone from 'react-dropzone';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FileUploader = props => {\n  _s();\n\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  /**\r\n   * Handled the accepted files and shows the preview\r\n   */\n\n  const handleAcceptedFiles = files => {\n    var allFiles = files;\n\n    if (props.showPreview) {\n      (files || []).map(file => Object.assign(file, {\n        preview: file['type'].split('/')[0] === 'image' ? URL.createObjectURL(file) : null,\n        formattedSize: formatBytes(file.size)\n      }));\n      allFiles = [...selectedFiles];\n      allFiles.push(...files);\n      setSelectedFiles(allFiles);\n    }\n\n    if (props.onFileUpload) props.onFileUpload(allFiles);\n  };\n  /**\r\n   * Formats the size\r\n   */\n\n\n  const formatBytes = (bytes, decimals = 2) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  };\n  /*\r\n   * Removes the selected file\r\n   */\n\n\n  const removeFile = (e, fileIndex) => {\n    const newFiles = [...selectedFiles];\n    newFiles.splice(fileIndex, 1);\n    setSelectedFiles(newFiles);\n    if (props.onFileUpload) props.onFileUpload(newFiles);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dropzone, { ...props,\n      onDrop: acceptedFiles => handleAcceptedFiles(acceptedFiles),\n      children: ({\n        getRootProps,\n        getInputProps\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames('dropzone', 'dz-clickable', {\n          'dz-started': selectedFiles && selectedFiles.length > 0\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dz-message needsclick\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"h1 text-muted uil-cloud-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Drop files here or click to upload.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-muted \",\n              children: [\"(This is just a demo dropzone. Selected files are \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"not\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 87\n              }, this), \" actually uploaded.)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), props.showPreview && (selectedFiles || []).map((f, i) => {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [f.preview && /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: e => e.stopPropagation(),\n                className: \"dz-preview dz-processing dz-error dz-complete dz-image-preview\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dz-image\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    \"data-dz-thumbnail\": \"\",\n                    alt: f.name,\n                    src: f.preview\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dz-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dz-size\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      \"data-dz-size\": \"\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: f.formattedSize\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 65\n                      }, this), \" KB\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dz-filename\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      \"data-dz-name\": \"\",\n                      children: f.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dz-remove\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"\",\n                    onClick: e => removeFile(e, i),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"uil uil-multiply\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 49\n              }, this), !f.preview && /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: e => e.stopPropagation(),\n                className: \"dz-preview dz-file-preview dz-processing dz-error dz-complete\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dz-image\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    \"data-dz-thumbnail\": \"\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dz-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dz-size\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      \"data-dz-size\": \"\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: f.formattedSize\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 65\n                      }, this), \" KB\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dz-filename\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      \"data-dz-name\": \"\",\n                      children: f.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dz-remove\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"\",\n                    onClick: e => removeFile(e, i),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"uil uil-multiply\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 49\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 41\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(FileUploader, \"6iJwk1gH4hB0xa84T6RYQXjKu58=\");\n\n_c = FileUploader;\nFileUploader.defaultProps = {\n  showPreview: true\n};\nexport default FileUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"sources":["D:/workspace/flying-assess/flyingcarpet-shared-inbox/src/components/FileUploader.tsx"],"names":["React","useState","Button","Dropzone","classNames","FileUploader","props","selectedFiles","setSelectedFiles","handleAcceptedFiles","files","allFiles","showPreview","map","file","Object","assign","preview","split","URL","createObjectURL","formattedSize","formatBytes","size","push","onFileUpload","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","removeFile","e","fileIndex","newFiles","splice","acceptedFiles","getRootProps","getInputProps","length","f","stopPropagation","name","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Dropzone from 'react-dropzone';\r\nimport classNames from 'classnames';\r\n\r\ninterface FileType extends File {\r\n    preview?: string;\r\n    formattedSize?: string;\r\n}\r\n\r\ninterface FileUploaderProps {\r\n    onFileUpload?: (files: FileType[]) => void;\r\n    showPreview?: boolean;\r\n}\r\n\r\nconst FileUploader = (props: FileUploaderProps) => {\r\n    const [selectedFiles, setSelectedFiles] = useState<FileType[]>([]);\r\n\r\n    /**\r\n     * Handled the accepted files and shows the preview\r\n     */\r\n    const handleAcceptedFiles = (files: FileType[]) => {\r\n        var allFiles = files;\r\n\r\n        if (props.showPreview) {\r\n            (files || []).map((file) =>\r\n                Object.assign(file, {\r\n                    preview: file['type'].split('/')[0] === 'image' ? URL.createObjectURL(file) : null,\r\n                    formattedSize: formatBytes(file.size),\r\n                })\r\n            );\r\n            allFiles = [...selectedFiles];\r\n            allFiles.push(...files);\r\n            setSelectedFiles(allFiles);\r\n        }\r\n\r\n        if (props.onFileUpload) props.onFileUpload(allFiles);\r\n    };\r\n\r\n    /**\r\n     * Formats the size\r\n     */\r\n    const formatBytes = (bytes: number, decimals: number = 2) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const dm = decimals < 0 ? 0 : decimals;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    };\r\n\r\n    /*\r\n     * Removes the selected file\r\n     */\r\n    const removeFile = (e: any, fileIndex: number) => {\r\n        const newFiles = [...selectedFiles];\r\n        newFiles.splice(fileIndex, 1);\r\n        setSelectedFiles(newFiles);\r\n        if (props.onFileUpload) props.onFileUpload(newFiles);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dropzone {...props} onDrop={(acceptedFiles) => handleAcceptedFiles(acceptedFiles)}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div\r\n                        className={classNames('dropzone', 'dz-clickable', {\r\n                            'dz-started': selectedFiles && selectedFiles.length > 0,\r\n                        })}>\r\n                        <div {...getRootProps()}>\r\n                            <div className=\"dz-message needsclick\">\r\n                                <input {...getInputProps()} />\r\n                                <i className=\"h1 text-muted uil-cloud-upload\"></i>\r\n                                <h3>Drop files here or click to upload.</h3>\r\n                                <span className=\"text-muted \">\r\n                                    (This is just a demo dropzone. Selected files are <strong>not</strong> actually\r\n                                    uploaded.)\r\n                                </span>\r\n                            </div>\r\n                            {props.showPreview &&\r\n                                (selectedFiles || []).map((f, i) => {\r\n                                    return (\r\n                                        <React.Fragment key={i}>\r\n                                            {f.preview && (\r\n                                                <div\r\n                                                    onClick={(e) => e.stopPropagation()}\r\n                                                    className=\"dz-preview dz-processing dz-error dz-complete dz-image-preview\">\r\n                                                    <div className=\"dz-image\">\r\n                                                        <img\r\n                                                            key={i}\r\n                                                            data-dz-thumbnail=\"\"\r\n                                                            alt={f.name}\r\n                                                            src={f.preview}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                    <div className=\"dz-details\">\r\n                                                        <div className=\"dz-size\">\r\n                                                            <span data-dz-size=\"\">\r\n                                                                <strong>{f.formattedSize}</strong> KB\r\n                                                            </span>\r\n                                                        </div>\r\n                                                        <div className=\"dz-filename\">\r\n                                                            <span data-dz-name=\"\">{f.name}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"dz-remove\">\r\n                                                        <Button variant=\"\" onClick={(e) => removeFile(e, i)}>\r\n                                                            <i className=\"uil uil-multiply\"></i>\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                            {!f.preview && (\r\n                                                <div\r\n                                                    onClick={(e) => e.stopPropagation()}\r\n                                                    className=\"dz-preview dz-file-preview dz-processing dz-error dz-complete\">\r\n                                                    <div className=\"dz-image\">\r\n                                                        <img data-dz-thumbnail=\"\" alt=\"\" />\r\n                                                    </div>\r\n                                                    <div className=\"dz-details\">\r\n                                                        <div className=\"dz-size\">\r\n                                                            <span data-dz-size=\"\">\r\n                                                                <strong>{f.formattedSize}</strong> KB\r\n                                                            </span>\r\n                                                        </div>\r\n                                                        <div className=\"dz-filename\">\r\n                                                            <span data-dz-name=\"\">{f.name}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"dz-remove\">\r\n                                                        <Button variant=\"\" onClick={(e) => removeFile(e, i)}>\r\n                                                            <i className=\"uil uil-multiply\"></i>\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </React.Fragment>\r\n                                    );\r\n                                })}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n        </>\r\n    );\r\n};\r\n\r\nFileUploader.defaultProps = {\r\n    showPreview: true,\r\n};\r\n\r\nexport default FileUploader;\r\n"]},"metadata":{},"sourceType":"module"}
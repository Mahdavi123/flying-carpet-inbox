{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\flying-assess\\\\flyingcarpet-shared-inbox\\\\src\\\\layouts\\\\TwoColumn\\\\MainMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Collapse } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames'; // constants\n\n// components\nimport Scrollbar from '../../components/Scrollbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MenuItemWithChildren = ({\n  item,\n  linkClassName,\n  subMenuClassNames,\n  activeMenuItems,\n  toggleMenu\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(activeMenuItems.includes(item.key));\n  useEffect(() => {\n    setOpen(activeMenuItems.includes(item.key));\n  }, [activeMenuItems, item]);\n\n  const toggleMenuItem = e => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classNames('nav-item', {\n        'menuitem-active': open\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        onClick: toggleMenuItem,\n        \"data-menu-key\": item.key,\n        \"aria-expanded\": open,\n        className: classNames(linkClassName, {\n          'menuitem-active': activeMenuItems.includes(item.key) ? 'active' : ''\n        }),\n        children: [!item.badge ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"menu-arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `badge bg-${item.badge.variant} rounded-pill float-end`,\n          children: item.badge.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", item.label, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: open,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: classNames(subMenuClassNames),\n            children: (item.children || []).map((child, i) => {\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: child.children ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(MenuItemWithChildren, {\n                    item: child,\n                    linkClassName: activeMenuItems.includes(child.key) ? 'active' : '',\n                    activeMenuItems: activeMenuItems,\n                    subMenuClassNames: \"nav-second-level\",\n                    toggleMenu: toggleMenu\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                    item: child,\n                    className: activeMenuItems.includes(child.key) ? 'menuitem-active' : '',\n                    linkClassName: activeMenuItems.includes(child.key) ? 'active' : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MenuItemWithChildren, \"/hFOGls/6gLTchtGKw48B6tHgnY=\");\n\n_c = MenuItemWithChildren;\n\nconst MenuItem = ({\n  item,\n  className,\n  linkClassName\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classNames('nav-item', className),\n      children: /*#__PURE__*/_jsxDEV(MenuItemLink, {\n        item: item,\n        className: linkClassName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = MenuItem;\n\nconst MenuItemLink = ({\n  item,\n  className\n}) => {\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: item.url,\n    target: item.target,\n    className: classNames('nav-link-ref', className),\n    \"data-menu-key\": item.key,\n    children: [item.badge && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `badge bg-${item.badge.variant} float-end`,\n      children: item.badge.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", item.label, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = MenuItemLink;\n\nconst MainMenu = ({\n  menuItems,\n  toggleMenu,\n  activeMenuItems\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: activeMenuItems && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-main-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"two-col-menu\",\n        className: \"h-100\",\n        children: /*#__PURE__*/_jsxDEV(Scrollbar, {\n          style: {\n            maxHeight: '100%'\n          },\n          children: (menuItems || []).map((menuItem, key) => {\n            const activeParent = activeMenuItems && activeMenuItems.length && activeMenuItems[activeMenuItems.length - 1] === menuItem['key'];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classNames('twocolumn-menu-item', {\n                'd-block': activeParent\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"title-box\",\n                children: [menuItem.isTitle && /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"menu-title\",\n                  children: menuItem.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 66\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"nav flex-column\",\n                  children: (menuItem.children || []).map((item, idx) => {\n                    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                      children: item.children ? /*#__PURE__*/_jsxDEV(MenuItemWithChildren, {\n                        item: item,\n                        toggleMenu: toggleMenu,\n                        subMenuClassNames: \"nav-second-level\",\n                        activeMenuItems: activeMenuItems,\n                        linkClassName: \"nav-link\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 65\n                      }, this) : /*#__PURE__*/_jsxDEV(MenuItem, {\n                        item: item,\n                        linkClassName: \"nav-link\",\n                        className: activeMenuItems.includes(item.key) ? 'menuitem-active' : ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 65\n                      }, this)\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 57\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 41\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_c4 = MainMenu;\nexport default MainMenu;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MenuItemWithChildren\");\n$RefreshReg$(_c2, \"MenuItem\");\n$RefreshReg$(_c3, \"MenuItemLink\");\n$RefreshReg$(_c4, \"MainMenu\");","map":{"version":3,"sources":["D:/workspace/flying-assess/flyingcarpet-shared-inbox/src/layouts/TwoColumn/MainMenu.tsx"],"names":["React","useEffect","useState","Collapse","Link","classNames","Scrollbar","MenuItemWithChildren","item","linkClassName","subMenuClassNames","activeMenuItems","toggleMenu","open","setOpen","includes","key","toggleMenuItem","e","preventDefault","status","badge","variant","text","label","children","map","child","i","MenuItem","className","MenuItemLink","url","target","MainMenu","menuItems","maxHeight","menuItem","activeParent","length","isTitle","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AAGA;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;;AAWA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,aAAR;AAAuBC,EAAAA,iBAAvB;AAA0CC,EAAAA,eAA1C;AAA2DC,EAAAA;AAA3D,CAAD,KAAuF;AAAA;;AAChH,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAUS,eAAe,CAAEI,QAAjB,CAA0BP,IAAI,CAACQ,GAA/B,CAAV,CAAhC;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAACH,eAAe,CAAEI,QAAjB,CAA0BP,IAAI,CAACQ,GAA/B,CAAD,CAAP;AACH,GAFQ,EAEN,CAACL,eAAD,EAAkBH,IAAlB,CAFM,CAAT;;AAIA,QAAMS,cAAc,GAAIC,CAAD,IAAY;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAG,CAACP,IAAhB;AACAC,IAAAA,OAAO,CAACM,MAAD,CAAP;AACA,QAAIR,UAAJ,EAAgBA,UAAU,CAACJ,IAAD,EAAOY,MAAP,CAAV;AAChB,WAAO,KAAP;AACH,GAND;;AAQA,sBACI;AAAA,2BACI;AAAI,MAAA,SAAS,EAAEf,UAAU,CAAC,UAAD,EAAa;AAAE,2BAAmBQ;AAArB,OAAb,CAAzB;AAAA,8BACI,QAAC,IAAD;AACI,QAAA,EAAE,EAAC,GADP;AAEI,QAAA,OAAO,EAAEI,cAFb;AAGI,yBAAeT,IAAI,CAACQ,GAHxB;AAII,yBAAeH,IAJnB;AAKI,QAAA,SAAS,EAAER,UAAU,CAACI,aAAD,EAAgB;AACjC,6BAAmBE,eAAe,CAAEI,QAAjB,CAA0BP,IAAI,CAACQ,GAA/B,IAAsC,QAAtC,GAAiD;AADnC,SAAhB,CALzB;AAAA,mBAQK,CAACR,IAAI,CAACa,KAAN,gBACG;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADH,gBAGG;AAAM,UAAA,SAAS,EAAG,YAAWb,IAAI,CAACa,KAAL,CAAWC,OAAQ,yBAAhD;AAAA,oBACKd,IAAI,CAACa,KAAL,CAAWE;AADhB;AAAA;AAAA;AAAA;AAAA,gBAXR,eAeI;AAAA,0BAAQf,IAAI,CAACgB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAkBI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEX,IAAd;AAAA,+BACI;AAAA,iCACI;AAAI,YAAA,SAAS,EAAER,UAAU,CAACK,iBAAD,CAAzB;AAAA,sBACK,CAACF,IAAI,CAACiB,QAAL,IAAiB,EAAlB,EAAsBC,GAAtB,CAA0B,CAACC,KAAD,EAAQC,CAAR,KAAc;AACrC,kCACI,QAAC,KAAD,CAAO,QAAP;AAAA,0BACKD,KAAK,CAACF,QAAN,gBACG;AAAA,yCAEI,QAAC,oBAAD;AACI,oBAAA,IAAI,EAAEE,KADV;AAEI,oBAAA,aAAa,EAAEhB,eAAe,CAAEI,QAAjB,CAA0BY,KAAK,CAACX,GAAhC,IAAuC,QAAvC,GAAkD,EAFrE;AAGI,oBAAA,eAAe,EAAEL,eAHrB;AAII,oBAAA,iBAAiB,EAAC,kBAJtB;AAKI,oBAAA,UAAU,EAAEC;AALhB;AAAA;AAAA;AAAA;AAAA;AAFJ,iCADH,gBAYG;AAAA,yCAEI,QAAC,QAAD;AACI,oBAAA,IAAI,EAAEe,KADV;AAEI,oBAAA,SAAS,EACLhB,eAAe,CAAEI,QAAjB,CAA0BY,KAAK,CAACX,GAAhC,IAAuC,iBAAvC,GAA2D,EAHnE;AAKI,oBAAA,aAAa,EAAEL,eAAe,CAAEI,QAAjB,CAA0BY,KAAK,CAACX,GAAhC,IAAuC,QAAvC,GAAkD;AALrE;AAAA;AAAA;AAAA;AAAA;AAFJ;AAbR,iBAAqBY,CAArB;AAAA;AAAA;AAAA;AAAA,sBADJ;AA2BH,aA5BA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA0DH,CAzED;;GAAMrB,oB;;KAAAA,oB;;AA2EN,MAAMsB,QAAQ,GAAG,CAAC;AAAErB,EAAAA,IAAF;AAAQsB,EAAAA,SAAR;AAAmBrB,EAAAA;AAAnB,CAAD,KAAkD;AAC/D,sBACI;AAAA,2BACI;AAAI,MAAA,SAAS,EAAEJ,UAAU,CAAC,UAAD,EAAayB,SAAb,CAAzB;AAAA,6BACI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEtB,IAApB;AAA0B,QAAA,SAAS,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH,CARD;;MAAMoB,Q;;AAUN,MAAME,YAAY,GAAG,CAAC;AAAEvB,EAAAA,IAAF;AAAQsB,EAAAA;AAAR,CAAD,KAAmC;AACpD,sBACI,QAAC,IAAD;AACI,IAAA,EAAE,EAAEtB,IAAI,CAACwB,GADb;AAEI,IAAA,MAAM,EAAExB,IAAI,CAACyB,MAFjB;AAGI,IAAA,SAAS,EAAE5B,UAAU,CAAC,cAAD,EAAiByB,SAAjB,CAHzB;AAII,qBAAetB,IAAI,CAACQ,GAJxB;AAAA,eAKKR,IAAI,CAACa,KAAL,iBAAc;AAAM,MAAA,SAAS,EAAG,YAAWb,IAAI,CAACa,KAAL,CAAWC,OAAQ,YAAhD;AAAA,gBAA8Dd,IAAI,CAACa,KAAL,CAAWE;AAAzE;AAAA;AAAA;AAAA;AAAA,YALnB,eAMI;AAAA,sBAAQf,IAAI,CAACgB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD;;MAAMO,Y;;AAmBN,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAavB,EAAAA,UAAb;AAAyBD,EAAAA;AAAzB,CAAD,KAA+D;AAC5E,sBACI;AAAA,cACKA,eAAe,iBACZ;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI;AAAK,QAAA,EAAE,EAAC,cAAR;AAAuB,QAAA,SAAS,EAAC,OAAjC;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE;AAAEyB,YAAAA,SAAS,EAAE;AAAb,WAAlB;AAAA,oBACK,CAACD,SAAS,IAAI,EAAd,EAAkBT,GAAlB,CAAsB,CAACW,QAAD,EAAWrB,GAAX,KAAmB;AACtC,kBAAMsB,YAAY,GACd3B,eAAe,IACfA,eAAe,CAAC4B,MADhB,IAEA5B,eAAe,CAACA,eAAe,CAAC4B,MAAhB,GAAyB,CAA1B,CAAf,KAAgDF,QAAQ,CAAC,KAAD,CAH5D;AAIA,gCACI;AAEI,cAAA,SAAS,EAAEhC,UAAU,CAAC,qBAAD,EAAwB;AACzC,2BAAWiC;AAD8B,eAAxB,CAFzB;AAAA,qCAKI;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,2BACKD,QAAQ,CAACG,OAAT,iBAAoB;AAAI,kBAAA,SAAS,EAAC,YAAd;AAAA,4BAA4BH,QAAQ,CAACb;AAArC;AAAA;AAAA;AAAA;AAAA,wBADzB,eAEI;AAAI,kBAAA,SAAS,EAAC,iBAAd;AAAA,4BACK,CAACa,QAAQ,CAACZ,QAAT,IAAqB,EAAtB,EAA0BC,GAA1B,CAA8B,CAAClB,IAAD,EAAOiC,GAAP,KAAe;AAC1C,wCACI,QAAC,KAAD,CAAO,QAAP;AAAA,gCACKjC,IAAI,CAACiB,QAAL,gBACG,QAAC,oBAAD;AACI,wBAAA,IAAI,EAAEjB,IADV;AAEI,wBAAA,UAAU,EAAEI,UAFhB;AAGI,wBAAA,iBAAiB,EAAC,kBAHtB;AAII,wBAAA,eAAe,EAAED,eAJrB;AAKI,wBAAA,aAAa,EAAC;AALlB;AAAA;AAAA;AAAA;AAAA,8BADH,gBASG,QAAC,QAAD;AACI,wBAAA,IAAI,EAAEH,IADV;AAEI,wBAAA,aAAa,EAAC,UAFlB;AAGI,wBAAA,SAAS,EACLG,eAAe,CAAEI,QAAjB,CAA0BP,IAAI,CAACQ,GAA/B,IACM,iBADN,GAEM;AANd;AAAA;AAAA;AAAA;AAAA;AAVR,uBAAqByB,GAArB;AAAA;AAAA;AAAA;AAAA,4BADJ;AAuBH,mBAxBA;AADL;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ,eACSzB,GADT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAsCH,WA3CA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFR,mBADJ;AAwDH,CAzDD;;MAAMkB,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Collapse } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\n// constants\r\nimport { MenuItemTypes } from '../../constants/menu';\r\n\r\n// components\r\nimport Scrollbar from '../../components/Scrollbar';\r\n\r\ninterface SubMenus {\r\n    item: MenuItemTypes;\r\n    linkClassName?: string;\r\n    subMenuClassNames?: string;\r\n    activeMenuItems?: Array<string>;\r\n    toggleMenu?: (item: any, status: boolean) => void;\r\n    className?: string;\r\n}\r\n\r\nconst MenuItemWithChildren = ({ item, linkClassName, subMenuClassNames, activeMenuItems, toggleMenu }: SubMenus) => {\r\n    const [open, setOpen] = useState<boolean>(activeMenuItems!.includes(item.key));\r\n\r\n    useEffect(() => {\r\n        setOpen(activeMenuItems!.includes(item.key));\r\n    }, [activeMenuItems, item]);\r\n\r\n    const toggleMenuItem = (e: any) => {\r\n        e.preventDefault();\r\n        const status = !open;\r\n        setOpen(status);\r\n        if (toggleMenu) toggleMenu(item, status);\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <li className={classNames('nav-item', { 'menuitem-active': open })}>\r\n                <Link\r\n                    to=\"#\"\r\n                    onClick={toggleMenuItem}\r\n                    data-menu-key={item.key}\r\n                    aria-expanded={open}\r\n                    className={classNames(linkClassName, {\r\n                        'menuitem-active': activeMenuItems!.includes(item.key) ? 'active' : '',\r\n                    })}>\r\n                    {!item.badge ? (\r\n                        <span className=\"menu-arrow\"></span>\r\n                    ) : (\r\n                        <span className={`badge bg-${item.badge.variant} rounded-pill float-end`}>\r\n                            {item.badge.text}\r\n                        </span>\r\n                    )}\r\n                    <span> {item.label} </span>\r\n                </Link>\r\n                <Collapse in={open}>\r\n                    <div>\r\n                        <ul className={classNames(subMenuClassNames)}>\r\n                            {(item.children || []).map((child, i) => {\r\n                                return (\r\n                                    <React.Fragment key={i}>\r\n                                        {child.children ? (\r\n                                            <>\r\n                                                {/* parent */}\r\n                                                <MenuItemWithChildren\r\n                                                    item={child}\r\n                                                    linkClassName={activeMenuItems!.includes(child.key) ? 'active' : ''}\r\n                                                    activeMenuItems={activeMenuItems}\r\n                                                    subMenuClassNames=\"nav-second-level\"\r\n                                                    toggleMenu={toggleMenu}\r\n                                                />\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                {/* child */}\r\n                                                <MenuItem\r\n                                                    item={child}\r\n                                                    className={\r\n                                                        activeMenuItems!.includes(child.key) ? 'menuitem-active' : ''\r\n                                                    }\r\n                                                    linkClassName={activeMenuItems!.includes(child.key) ? 'active' : ''}\r\n                                                />\r\n                                            </>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </Collapse>\r\n            </li>\r\n        </>\r\n    );\r\n};\r\n\r\nconst MenuItem = ({ item, className, linkClassName }: SubMenus) => {\r\n    return (\r\n        <>\r\n            <li className={classNames('nav-item', className)}>\r\n                <MenuItemLink item={item} className={linkClassName} />\r\n            </li>\r\n        </>\r\n    );\r\n};\r\n\r\nconst MenuItemLink = ({ item, className }: SubMenus) => {\r\n    return (\r\n        <Link\r\n            to={item.url!}\r\n            target={item.target}\r\n            className={classNames('nav-link-ref', className)}\r\n            data-menu-key={item.key}>\r\n            {item.badge && <span className={`badge bg-${item.badge.variant} float-end`}>{item.badge.text}</span>}\r\n            <span> {item.label} </span>\r\n        </Link>\r\n    );\r\n};\r\n\r\ninterface MainMenuProps {\r\n    menuItems: MenuItemTypes[];\r\n    toggleMenu: (item: MenuItemTypes, show: boolean) => void;\r\n    activeMenuItems: string[];\r\n}\r\n\r\nconst MainMenu = ({ menuItems, toggleMenu, activeMenuItems }: MainMenuProps) => {\r\n    return (\r\n        <>\r\n            {activeMenuItems && (\r\n                <div className=\"sidebar-main-menu\">\r\n                    <div id=\"two-col-menu\" className=\"h-100\">\r\n                        <Scrollbar style={{ maxHeight: '100%' }}>\r\n                            {(menuItems || []).map((menuItem, key) => {\r\n                                const activeParent =\r\n                                    activeMenuItems &&\r\n                                    activeMenuItems.length &&\r\n                                    activeMenuItems[activeMenuItems.length - 1] === menuItem['key'];\r\n                                return (\r\n                                    <div\r\n                                        key={key}\r\n                                        className={classNames('twocolumn-menu-item', {\r\n                                            'd-block': activeParent,\r\n                                        })}>\r\n                                        <div className=\"title-box\">\r\n                                            {menuItem.isTitle && <h5 className=\"menu-title\">{menuItem.label}</h5>}\r\n                                            <ul className=\"nav flex-column\">\r\n                                                {(menuItem.children || []).map((item, idx) => {\r\n                                                    return (\r\n                                                        <React.Fragment key={idx}>\r\n                                                            {item.children ? (\r\n                                                                <MenuItemWithChildren\r\n                                                                    item={item}\r\n                                                                    toggleMenu={toggleMenu}\r\n                                                                    subMenuClassNames=\"nav-second-level\"\r\n                                                                    activeMenuItems={activeMenuItems}\r\n                                                                    linkClassName=\"nav-link\"\r\n                                                                />\r\n                                                            ) : (\r\n                                                                <MenuItem\r\n                                                                    item={item}\r\n                                                                    linkClassName=\"nav-link\"\r\n                                                                    className={\r\n                                                                        activeMenuItems!.includes(item.key)\r\n                                                                            ? 'menuitem-active'\r\n                                                                            : ''\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        </React.Fragment>\r\n                                                    );\r\n                                                })}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </Scrollbar>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainMenu;\r\n"]},"metadata":{},"sourceType":"module"}
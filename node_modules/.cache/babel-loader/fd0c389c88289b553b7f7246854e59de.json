{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\flying-assess\\\\flyingcarpet-shared-inbox\\\\src\\\\pages\\\\other\\\\Profile\\\\OtherDetails\\\\Tasks.tsx\";\nimport React from 'react';\nimport { Card, Row, Col, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport classNames from 'classnames'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = ({\n  tasks\n}) => {\n  const totalTasks = tasks.length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mt-1 fs-15 fw-bold text-uppercase\",\n      children: \"My Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-0 mt-3 border-0\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"p-0\",\n        children: (tasks || []).map((task, idx) => /*#__PURE__*/_jsxDEV(Row, {\n          className: classNames('justify-content-sm-between', {\n            'border-bottom': idx + 1 !== totalTasks,\n            'mt-1': idx + 1 !== 1,\n            'pt-2': idx + 1 !== 1\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            className: \"mb-2 mb-lg-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: `task-${idx}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: `task-${idx}`,\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-sm-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                  placement: \"bottom\",\n                  overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    id: task.assigned_to,\n                    children: [\"Assigned to \", task.assigned_to]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 49\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: task.assignee_avatar,\n                    alt: \"\",\n                    className: \"avatar-xs rounded-circle\",\n                    id: `task-avatar-${idx}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-3 mt-sm-0\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: classNames('list-inline', 'text-sm-end', {\n                    'mb-0': idx + 1 === totalTasks\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"list-inline-item pe-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"uil uil-schedule me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 49\n                    }, this), \" \", task.due_date]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"list-inline-item pe-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"uil uil-align-alt me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 49\n                    }, this), ' ', task.checklists.filter(t => t.completed).length, \" /\", ' ', task.checklists.length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"list-inline-item pe-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"uil uil-comment-message me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 49\n                    }, this), \" \", task.comments.length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"list-inline-item\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: classNames('badge', {\n                        'badge-soft-danger': task.priority === 'High',\n                        'badge-soft-info': task.priority === 'Medium',\n                        'badge-soft-success': task.priority === 'Low'\n                      }, 'p-1'),\n                      children: task.priority\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["D:/workspace/flying-assess/flyingcarpet-shared-inbox/src/pages/other/Profile/OtherDetails/Tasks.tsx"],"names":["React","Card","Row","Col","OverlayTrigger","Tooltip","classNames","Tasks","tasks","totalTasks","length","map","task","idx","title","assigned_to","assignee_avatar","due_date","checklists","filter","t","completed","comments","priority"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, Row, Col, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// types\r\nimport { TaskItemTypes } from '../../../apps/Tasks/List/data';\r\n\r\ninterface TasksProps {\r\n    tasks: TaskItemTypes[];\r\n}\r\n\r\nconst Tasks = ({ tasks }: TasksProps) => {\r\n    const totalTasks = tasks.length;\r\n\r\n    return (\r\n        <>\r\n            <h4 className=\"mt-1 fs-15 fw-bold text-uppercase\">My Tasks</h4>\r\n\r\n            <Card className=\"mb-0 mt-3 border-0\">\r\n                <Card.Body className=\"p-0\">\r\n                    {(tasks || []).map((task, idx) => (\r\n                        <Row\r\n                            key={idx}\r\n                            className={classNames('justify-content-sm-between', {\r\n                                'border-bottom': idx + 1 !== totalTasks,\r\n                                'mt-1': idx + 1 !== 1,\r\n                                'pt-2': idx + 1 !== 1,\r\n                            })}>\r\n                            <Col lg={6} className=\"mb-2 mb-lg-0\">\r\n                                <div className=\"form-check\">\r\n                                    <input type=\"checkbox\" className=\"form-check-input\" id={`task-${idx}`} />\r\n                                    <label className=\"form-check-label\" htmlFor={`task-${idx}`}>\r\n                                        {task.title}\r\n                                    </label>\r\n                                </div>\r\n                            </Col>\r\n                            <Col lg={6}>\r\n                                <div className=\"d-sm-flex justify-content-between\">\r\n                                    <div>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            overlay={\r\n                                                <Tooltip id={task.assigned_to}>Assigned to {task.assigned_to}</Tooltip>\r\n                                            }>\r\n                                            <img\r\n                                                src={task.assignee_avatar}\r\n                                                alt=\"\"\r\n                                                className=\"avatar-xs rounded-circle\"\r\n                                                id={`task-avatar-${idx}`}\r\n                                            />\r\n                                        </OverlayTrigger>\r\n                                    </div>\r\n                                    <div className=\"mt-3 mt-sm-0\">\r\n                                        <ul\r\n                                            className={classNames('list-inline', 'text-sm-end', {\r\n                                                'mb-0': idx + 1 === totalTasks,\r\n                                            })}>\r\n                                            <li className=\"list-inline-item pe-1\">\r\n                                                <i className=\"uil uil-schedule me-1\"></i> {task.due_date}\r\n                                            </li>\r\n                                            <li className=\"list-inline-item pe-1\">\r\n                                                <i className=\"uil uil-align-alt me-1\"></i>{' '}\r\n                                                {task.checklists.filter((t) => t.completed).length} /{' '}\r\n                                                {task.checklists.length}\r\n                                            </li>\r\n                                            <li className=\"list-inline-item pe-2\">\r\n                                                <i className=\"uil uil-comment-message me-1\"></i> {task.comments.length}\r\n                                            </li>\r\n                                            <li className=\"list-inline-item\">\r\n                                                <span\r\n                                                    className={classNames(\r\n                                                        'badge',\r\n                                                        {\r\n                                                            'badge-soft-danger': task.priority === 'High',\r\n                                                            'badge-soft-info': task.priority === 'Medium',\r\n                                                            'badge-soft-success': task.priority === 'Low',\r\n                                                        },\r\n                                                        'p-1'\r\n                                                    )}>\r\n                                                    {task.priority}\r\n                                                </span>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    ))}\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Tasks;\r\n"]},"metadata":{},"sourceType":"module"}
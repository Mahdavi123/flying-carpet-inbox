{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\flying-assess\\\\flyingcarpet-shared-inbox\\\\src\\\\components\\\\Datepicker.tsx\";\nimport React, { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n/* Datepicker with Input */\nconst DatepickerInput = /*#__PURE__*/forwardRef(_c = (props, ref) => {\n  const onDateValueChange = () => {\n    console.log('date value changed');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    className: classNames('form-control', props.inputClass),\n    onClick: props.onClick,\n    value: props.value,\n    onChange: onDateValueChange,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n});\n/* Datepicker with Addon Input */\n\n_c2 = DatepickerInput;\nconst DatepickerInputWithAddon = /*#__PURE__*/forwardRef(_c3 = (props, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"input-group input-group-sm\",\n  ref: ref,\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    className: classNames('form-control', props.inputClass),\n    onClick: props.onClick,\n    value: props.value,\n    readOnly: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"input-group-text bg-blue border-blue text-white\",\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"mdi mdi-calendar-range\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 5\n}, this));\n_c4 = DatepickerInputWithAddon;\n\nconst ShreyuDatepicker = props => {\n  // handle custom input\n  const input = (props.hideAddon || false) === true ? /*#__PURE__*/_jsxDEV(DatepickerInput, {\n    inputClass: props.inputClass\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(DatepickerInputWithAddon, {\n    inputClass: props.inputClass\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n      calendarClassName: props.calendarClassName || 'shadow',\n      selectsRange: props.selectsRange,\n      startDate: props.startDate,\n      endDate: props.endDate,\n      selected: props.value,\n      onChange: date => props.onChange(date),\n      customInput: input,\n      timeIntervals: props.tI,\n      showTimeSelect: props.showTimeSelect,\n      timeFormat: props.timeFormat || 'hh:mm a',\n      timeCaption: props.timeCaption,\n      dateFormat: props.dateFormat || 'MM/dd/yyyy',\n      minDate: props.minDate,\n      maxDate: props.maxDate,\n      monthsShown: props.monthsShown,\n      showTimeSelectOnly: props.showTimeSelectOnly,\n      inline: props.inline,\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c5 = ShreyuDatepicker;\nexport default ShreyuDatepicker;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DatepickerInput$forwardRef\");\n$RefreshReg$(_c2, \"DatepickerInput\");\n$RefreshReg$(_c3, \"DatepickerInputWithAddon$forwardRef\");\n$RefreshReg$(_c4, \"DatepickerInputWithAddon\");\n$RefreshReg$(_c5, \"ShreyuDatepicker\");","map":{"version":3,"sources":["D:/workspace/flying-assess/flyingcarpet-shared-inbox/src/components/Datepicker.tsx"],"names":["React","forwardRef","DatePicker","classNames","DatepickerInput","props","ref","onDateValueChange","console","log","inputClass","onClick","value","DatepickerInputWithAddon","ShreyuDatepicker","input","hideAddon","calendarClassName","selectsRange","startDate","endDate","date","onChange","tI","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport classNames from 'classnames';\r\n\r\ninterface DatepickerInputProps {\r\n    onClick?: () => void;\r\n    value?: string;\r\n    inputClass: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\n/* Datepicker with Input */\r\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>((props, ref) => {\r\n    const onDateValueChange = () => {\r\n        console.log('date value changed');\r\n    };\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            className={classNames('form-control', props.inputClass)}\r\n            onClick={props.onClick}\r\n            value={props.value}\r\n            onChange={onDateValueChange}\r\n            ref={ref}\r\n        />\r\n    );\r\n});\r\n\r\n/* Datepicker with Addon Input */\r\nconst DatepickerInputWithAddon = forwardRef<HTMLInputElement, DatepickerInputProps>((props, ref) => (\r\n    <div className=\"input-group input-group-sm\" ref={ref}>\r\n        <input\r\n            type=\"text\"\r\n            className={classNames('form-control', props.inputClass)}\r\n            onClick={props.onClick}\r\n            value={props.value}\r\n            readOnly\r\n        />\r\n        <span className=\"input-group-text bg-blue border-blue text-white\">\r\n            <i className=\"mdi mdi-calendar-range\"></i>\r\n        </span>\r\n    </div>\r\n));\r\n\r\ninterface ShreyuDatepickerProps {\r\n    value?: Date;\r\n    selectsRange?: boolean;\r\n    startDate?: Date;\r\n    endDate?: Date;\r\n    calendarClassName?: string;\r\n    onChange: (date: any) => void;\r\n    hideAddon?: boolean;\r\n    inputClass?: string;\r\n    dateFormat?: string;\r\n    minDate?: Date;\r\n    maxDate?: Date;\r\n    showTimeSelect?: boolean;\r\n    tI?: number;\r\n    timeCaption?: string;\r\n    timeFormat?: string;\r\n    showTimeSelectOnly?: boolean;\r\n    monthsShown?: number;\r\n    inline?: boolean;\r\n}\r\n\r\nconst ShreyuDatepicker = (props: ShreyuDatepickerProps) => {\r\n    // handle custom input\r\n    const input =\r\n        (props.hideAddon || false) === true ? (\r\n            <DatepickerInput inputClass={props.inputClass!} />\r\n        ) : (\r\n            <DatepickerInputWithAddon inputClass={props.inputClass!} />\r\n        );\r\n\r\n    return (\r\n        <>\r\n            {/* date picker control */}\r\n            <DatePicker\r\n                calendarClassName={props.calendarClassName || 'shadow'}\r\n                selectsRange={props.selectsRange}\r\n                startDate={props.startDate}\r\n                endDate={props.endDate}\r\n                selected={props.value}\r\n                onChange={(date) => props.onChange(date)}\r\n                customInput={input}\r\n                timeIntervals={props.tI}\r\n                showTimeSelect={props.showTimeSelect}\r\n                timeFormat={props.timeFormat || 'hh:mm a'}\r\n                timeCaption={props.timeCaption}\r\n                dateFormat={props.dateFormat || 'MM/dd/yyyy'}\r\n                minDate={props.minDate}\r\n                maxDate={props.maxDate}\r\n                monthsShown={props.monthsShown}\r\n                showTimeSelectOnly={props.showTimeSelectOnly}\r\n                inline={props.inline}\r\n                autoComplete=\"off\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ShreyuDatepicker;\r\n"]},"metadata":{},"sourceType":"module"}
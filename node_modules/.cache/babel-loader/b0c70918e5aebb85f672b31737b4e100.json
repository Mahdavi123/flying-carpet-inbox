{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\flyingcarpet\\\\flyingcarpet-shared-inbox\\\\src\\\\pages\\\\apps\\\\Chat\\\\ChatArea.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Modal } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { API_Key } from '../../../config/index';\nimport FileUploader from '../../../components/FileUploader'; // components\n\nimport { FormInput } from '../../../components/';\nimport Scrollbar from '../../../components/Scrollbar';\nimport Loader from '../../../components/Loader';\nimport ProfileModal from './ProfileModal';\nimport VideocallModal from './VideocallModal';\nimport VoicecallModal from './VoicecallModal'; // default data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatHeader = ({\n  selectedUser\n}) => {\n  _s();\n\n  // handle profile modal\n  const [showProfileModal, setShowProfileModal] = useState(false);\n\n  const handleProfileModalClose = () => setShowProfileModal(false);\n\n  const handleProfileModalShow = () => setShowProfileModal(true); // handle video modal\n\n\n  const [showVideocallModal, setShowVideocallModal] = useState(false);\n\n  const handleVideocallModalClose = () => setShowVideocallModal(false);\n\n  const handleVideocallModalShow = () => setShowVideocallModal(true); // handle voice modal\n\n\n  const [showVoicelModal, setShowVoicelModal] = useState(false);\n\n  const handleVoicelModalClose = () => setShowVoicelModal(false);\n\n  const handleVoicelModalShow = () => setShowVoicelModal(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex pb-2 border-bottom align-items-center\",\n      dir: \"rtl\",\n      children: [selectedUser && selectedUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedUser.avatar,\n        alt: \"\",\n        className: \"me-2 rounded-circle\",\n        height: \"48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-sm fw-bold d-inline-block\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `avatar-title rounded-circle bg-soft-success text-sucess`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedUser == undefined ? \"\" : selectedUser.avatar,\n        className: \"me-2 rounded-circle\",\n        height: \"48\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mt-0 mb-0 fs-14\",\n          dir: \"ltr\",\n          children: selectedUser == undefined ? \"\" : selectedUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: selectedUser == undefined ? \"\" : selectedUser.userStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow-1\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-inline float-end mb-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProfileModal, {\n      show: showProfileModal,\n      handleClose: handleProfileModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VideocallModal, {\n      show: showVideocallModal,\n      handleClose: handleVideocallModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VoicecallModal, {\n      show: showVoicelModal,\n      handleClose: handleVoicelModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatHeader, \"jKujxcho0KvxsKX0a4fS4J1p8sM=\");\n\n_c = ChatHeader;\n\n// user messages\nconst UserMessage = ({\n  message,\n  toUser\n}) => {\n  const validURL = str => {\n    let pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n    '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n    '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n\n    return !!pattern.test(str);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (message.messages || []).map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classNames('clearfix', {\n          odd: message.from.id === toUser.id,\n          'mb-1': message.messages.length > 1 && index !== message.messages.length - 1\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-text ms-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames('d-flex', {\n              'justify-content-end': message.from.id === toUser.id\n            }),\n            children: [item.type === 'text' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ctext-wrap\",\n              children: validURL(item.value) == true ? /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"http://\" + item.value,\n                children: item.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 76\n              }, this) : item.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this), item.type === 'file' && /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mb-1 shadow-none border text-start\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    className: \"col-auto\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"avatar-sm bg-primary text-white\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"avatar-title rounded\",\n                        children: \".File\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"ps-0\",\n                    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                      href: item.value,\n                      className: \"text-muted fw-bold\",\n                      children: item.value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mb-0\",\n                      children: item.value.size\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"col-auto\",\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: item.value,\n                      className: \"ps-3 fs-24\",\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-arrow-down-square\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), index === message.messages.length - 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted fs-12 mb-0 mt-1\",\n            children: [message.sendOn, message.from.id === toUser.id && /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-check2-all ms-1 text-success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c2 = UserMessage;\n\n// ChatArea\nconst ChatArea = ({\n  selectedUser,\n  admin,\n  setUser,\n  user,\n  scrollref\n}) => {\n  _s2();\n\n  const [loading, setLoading] = useState(false); //show loading\n\n  const [chatHistory, setChatHistory] = useState([]); //messages\n\n  const [real, setreal] = useState([]); //total messages\n\n  const [files, setfiles] = useState([]); //store files\n\n  const scrollreflocal = useRef(); //scroll component\n\n  const [showModal, setModal] = useState(false); //modal controller\n\n  const [flag, setflag] = useState(false);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  /**\n   * Auto scroll to Bottom\n   */\n\n  const scrollBottom = () => {\n    if (scrollreflocal.current !== null) {\n      scrollreflocal.current.scrollIntoView();\n    }\n  };\n  /**\n   * 2 July 2022 format date \n   */\n\n\n  const getDateStr = timedate => {\n    const year = timedate.getFullYear();\n    const monthnum = timedate.getMonth();\n    const month = months[monthnum];\n    const date = timedate.getDate();\n    const timespan = month + \" \" + date + \" \" + year;\n    return timespan;\n  };\n\n  const toUser = {\n    id: admin.id,\n    name: admin.name\n  };\n  useEffect(() => {\n    fetchData();\n  }, [admin]);\n  /**\n   * Fetch messages in real time\n   */\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      fetchData();\n    }, 100);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [chatHistory]);\n  useEffect(() => {\n    scrollBottom();\n  }, [flag]);\n  /**\n   * Body of get message data\n   * @returns \n   */\n\n  const fetchData = () => {\n    if (selectedUser == undefined) return;\n    const chatId = selectedUser.id;\n    let fetchemailurl;\n\n    if (chatId != '') {\n      fetchemailurl = `https://api.chat-api.com/instance${API_Key.instance}/messages?chatId=${chatId}@c.us&token=${API_Key.token}`;\n    } else {\n      fetchemailurl = `https://api.chat-api.com/instance${API_Key.instance}/messages?token=${API_Key.token}`;\n    }\n\n    fetch(fetchemailurl).then(res => res.json()).then(json => {\n      const total = [...json.messages];\n      let from;\n      let to;\n      let messages = [];\n      let dates = [];\n      total.sort((a, b) => a.time - b.time);\n\n      for (let i = 0; i < total.length; i++) {\n        const time = total[i].time;\n        const timedate = new Date(time * 1000);\n        const nowdate = new Date();\n        let timespan = getDateStr(timedate);\n        let hour = timedate.getHours();\n        let min = String(timedate.getMinutes());\n        let tmp = \" AM\";\n        let hourtxt = String(hour);\n\n        if (hour > 12) {\n          hour -= 12;\n          tmp = \" PM\";\n        }\n\n        if (min.length == 1) {\n          min = \"0\" + min;\n        }\n\n        if (getDateStr(timedate) == getDateStr(nowdate)) {\n          timespan = \"Today\";\n        }\n\n        if (dates.indexOf(timespan) == -1) {\n          dates.push(timespan);\n        } // create message\n\n\n        let user = {\n          id: total[i]['chatName'],\n          name: total[i]['senderName'],\n          userStatus: \"online\"\n        };\n\n        if (total[i]['fromMe'] == 1) {\n          from = admin;\n          to = user;\n        } else {\n          from = user;\n          to = admin;\n        }\n\n        let mes = {\n          id: i,\n          from: from,\n          to: to,\n          sendOn: hourtxt + \" : \" + min + tmp,\n          messages: [{\n            type: total[i].type == 'chat' ? 'text' : 'file',\n            value: total[i].body\n          }],\n          sendDate: timespan\n        };\n        messages.push(mes);\n      }\n\n      let chatmessages = [];\n\n      for (let i = 0; i < dates.length; i++) {\n        let dateMessage = [];\n        dateMessage = messages.filter(mes => mes.sendDate == dates[i]);\n        chatmessages.push({\n          id: i,\n          day: dates[i],\n          messages: dateMessage\n        });\n      }\n\n      const tmp = [...chatHistory];\n      console.log(tmp);\n\n      if (chatHistory.length == 0) {\n        setflag(true);\n      } else {\n        if (chatmessages[chatmessages.length - 1].messages.length != tmp[tmp.length - 1].messages.length) {\n          setflag(true);\n        } else {\n          setflag(false);\n        }\n      }\n\n      setChatHistory(chatmessages);\n    });\n  };\n\n  const onFileUpload = files => {\n    setfiles(files);\n  };\n  /*\n   *  Fetches the messages for selected user\n   */\n\n\n  const getMessagesForUser = useCallback(() => {\n    if (selectedUser) {\n      setTimeout(() => {\n        fetchData(); // const modifiedChatHistory = [...chatHistory].map((record) => {\n        //     const test = {\n        //         id: record.id,\n        //         day: record.day,\n        //         messages: [...record.messages].filter(\n        //             (m) =>\n        //                 (m.to.id === admin.id && m.from.id === selectedUser.id) ||\n        //                 (admin.id === m.from.id && m.to.id === selectedUser.id)\n        //         ),\n        //     };\n        //     return test;\n        // });\n        // modifiedChatHistory.filter((mes) => mes.messages.length);\n        // setChatHistory([...modifiedChatHistory]);\n        // fetchData(selectedUser.id);\n\n        setLoading(false);\n      }, 750);\n    }\n  }, [selectedUser]); // useEffect(() => {\n  //     getMessagesForUser();\n  // }, [getMessagesForUser]);\n\n  /*\n   * form validation schema\n   */\n\n  const schemaResolver = yupResolver(yup.object().shape({\n    newMessage: yup.string().required('אנא רשום את הודעתך')\n  }));\n  /*\n   * form methods\n   */\n\n  const methods = useForm({\n    resolver: schemaResolver\n  });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: {\n      errors\n    },\n    reset\n  } = methods;\n  /**\n   * sends the chat message\n   */\n\n  const sendChatMessage = values => {\n    const now = new Date();\n    const nowstr = getDateStr(now);\n    const fetchUrl = `https://api.chat-api.com/instance${API_Key.instance}/sendMessage?token=${API_Key.token}`;\n    const dData = {\n      body: values['newMessage'],\n      phone: selectedUser.id\n    };\n    fetch(fetchUrl, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer',\n      // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify(dData) // body data type must match \"Content-Type\" header\n\n    }).then(res => {\n      // props.history.push(\"/apps/email/inbox\")\n      console.log(res);\n    }); // let newUserMessages = [...chatHistory[chatHistory.length - 1].messages];\n    // newUserMessages.push({\n    //     id: chatHistory[chatHistory.length - 1].messages.length + 1,\n    //     from: toUser,\n    //     to: selectedUser,\n    //     messages: [{ type: 'text', value: values['newMessage'] }],\n    //     sendOn: new Date().getHours() + ':' + new Date().getMinutes(),\n    // });\n    // let modifiedChatHistory = [...chatHistory].map((record, index) => {\n    //     const test = {\n    //         id: record.id,\n    //         day: record.day,\n    //         messages: index === chatHistory.length - 1 ? newUserMessages : record.messages,\n    //     };\n    //     return test;\n    // });\n    // let check = [...chatHistory].filter((m) => m.day == nowstr);\n    // if (check.length == 0) {\n    //     newUserMessages = [];\n    //     newUserMessages.push({\n    //         id: 1,\n    //         from: toUser,\n    //         to: selectedUser,\n    //         messages: [{ type: 'text', value: values['newMessage'] }],\n    //         sendOn: new Date().getHours() + ':' + new Date().getMinutes(),\n    //     });\n    //     modifiedChatHistory = [...chatHistory];\n    //     modifiedChatHistory.push({\n    //         id : chatHistory.length,\n    //         day : nowstr,\n    //         messages : newUserMessages\n    //     });\n    // }\n    // setChatHistory([...modifiedChatHistory]);\n\n    reset();\n  };\n\n  const sendfile = async () => {\n    for (let i = 0; i < files.length; i++) {\n      const dData = {\n        body: files[i],\n        filename: files[i]['name'],\n        phone: selectedUser.id\n      };\n      const formData = new FormData();\n      dData['body'] = await getBase64(files[i]);\n      send(dData);\n    }\n  };\n\n  const send = async senddata => {\n    const fetchUrl = `https://api.chat-api.com/instance${API_Key.instance}/sendFile?token=${API_Key.token}`;\n    const result = await fetch(fetchUrl, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json' //   'Content-Type': 'application/x-www-form-urlencoded',\n        //   'Content-Type': 'multipart/form-data',\n\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer',\n      // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify(senddata) // body data type must match \"Content-Type\" header\n\n    });\n    console.log(result);\n  };\n\n  const getBase64 = async file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(ChatHeader, {\n          selectedUser: selectedUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1\",\n          children: [/*#__PURE__*/_jsxDEV(Scrollbar, {\n            style: {\n              height: '509px',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"conversation-list px-0 h-100\",\n              children: (chatHistory || []).map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"position-relative\",\n                    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 609,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"badge bg-light text-dark position-absolute top-0 start-50 translate-middle\",\n                        children: item.day\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 611,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 610,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 45\n                  }, this), (item.messages || []).map((message, index) => {\n                    // console.log(message);\n                    return /*#__PURE__*/_jsxDEV(UserMessage, {\n                      message: message,\n                      toUser: toUser\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 618,\n                      columnNumber: 56\n                    }, this);\n                  })]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: scrollreflocal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 bg-light p-3 rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              noValidate: true,\n              name: \"chat-form\",\n              id: \"chat-form\",\n              onSubmit: handleSubmit(sendChatMessage),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col mb-2 mb-sm-0\",\n                  children: /*#__PURE__*/_jsxDEV(FormInput, {\n                    type: \"text\",\n                    name: \"newMessage\",\n                    className: \"border-0\",\n                    placeholder: \"Enter your text\",\n                    register: register,\n                    errors: errors,\n                    control: control\n                  }, \"newMessage\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-auto\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"btn-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"btn btn-light\",\n                      onClick: () => setModal(true),\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-paperclip fs-18\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 648,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 647,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-success chat-send\",\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"uil uil-message\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 654,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 653,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setModal(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        onHide: () => setModal(false),\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          as: \"h5\",\n          children: \"Error modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(FileUploader, {\n          onFileUpload: files => onFileUpload(files)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: \"btn btn-outline-primary rounded-pill width-md\",\n            onClick: () => sendfile(),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"uil uil-arrow-right me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 29\n            }, this), \" Submit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(ChatArea, \"cf6u3tsbPUoks+AgpNdtJnRiUa0=\", false, function () {\n  return [useForm];\n});\n\n_c3 = ChatArea;\nexport default ChatArea;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ChatHeader\");\n$RefreshReg$(_c2, \"UserMessage\");\n$RefreshReg$(_c3, \"ChatArea\");","map":{"version":3,"sources":["D:/workspace/flyingcarpet/flyingcarpet-shared-inbox/src/pages/apps/Chat/ChatArea.tsx"],"names":["React","useCallback","useEffect","useState","useRef","useForm","Link","Card","Row","Col","Modal","classNames","yup","yupResolver","API_Key","FileUploader","FormInput","Scrollbar","Loader","ProfileModal","VideocallModal","VoicecallModal","ChatHeader","selectedUser","showProfileModal","setShowProfileModal","handleProfileModalClose","handleProfileModalShow","showVideocallModal","setShowVideocallModal","handleVideocallModalClose","handleVideocallModalShow","showVoicelModal","setShowVoicelModal","handleVoicelModalClose","handleVoicelModalShow","avatar","undefined","name","userStatus","UserMessage","message","toUser","validURL","str","pattern","RegExp","test","messages","map","item","index","odd","from","id","length","type","value","size","sendOn","ChatArea","admin","setUser","user","scrollref","loading","setLoading","chatHistory","setChatHistory","real","setreal","files","setfiles","scrollreflocal","showModal","setModal","flag","setflag","months","scrollBottom","current","scrollIntoView","getDateStr","timedate","year","getFullYear","monthnum","getMonth","month","date","getDate","timespan","fetchData","timer","setTimeout","clearTimeout","chatId","fetchemailurl","instance","token","fetch","then","res","json","total","to","dates","sort","a","b","time","i","Date","nowdate","hour","getHours","min","String","getMinutes","tmp","hourtxt","indexOf","push","mes","body","sendDate","chatmessages","dateMessage","filter","day","console","log","onFileUpload","getMessagesForUser","schemaResolver","object","shape","newMessage","string","required","methods","resolver","handleSubmit","register","control","formState","errors","reset","sendChatMessage","values","now","nowstr","fetchUrl","dData","phone","method","mode","cache","credentials","headers","redirect","referrerPolicy","JSON","stringify","sendfile","filename","formData","FormData","getBase64","send","senddata","result","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","height","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState,useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { Card, Dropdown, Row, Col, Modal } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport { API_Key } from '../../../config/index';\nimport FileUploader from '../../../components/FileUploader';\n\n\n// components\nimport { FormInput } from '../../../components/';\nimport Scrollbar from '../../../components/Scrollbar';\nimport Loader from '../../../components/Loader';\n\nimport ProfileModal from './ProfileModal';\nimport VideocallModal from './VideocallModal';\nimport VoicecallModal from './VoicecallModal';\n\n// default data\nimport { CHATHISTORY, ChatUserType, ChatMessage, MessageItem } from './data';\n\n// images\nimport avatar1 from '../../../assets/images/users/avatar-2.jpg';\nimport { format } from 'path';\n\ninterface ChatHeaderProps {\n    selectedUser: ChatUserType;\n}\n\nconst ChatHeader = ({ selectedUser }: ChatHeaderProps) => {\n    // handle profile modal\n    const [showProfileModal, setShowProfileModal] = useState<boolean>(false);\n\n    const handleProfileModalClose = () => setShowProfileModal(false);\n    const handleProfileModalShow = () => setShowProfileModal(true);\n\n    // handle video modal\n    const [showVideocallModal, setShowVideocallModal] = useState<boolean>(false);\n\n    const handleVideocallModalClose = () => setShowVideocallModal(false);\n    const handleVideocallModalShow = () => setShowVideocallModal(true);\n\n    // handle voice modal\n    const [showVoicelModal, setShowVoicelModal] = useState<boolean>(false);\n\n    const handleVoicelModalClose = () => setShowVoicelModal(false);\n    const handleVoicelModalShow = () => setShowVoicelModal(true);\n\n    return (\n        <>\n            <div className=\"d-flex pb-2 border-bottom align-items-center\" dir=\"rtl\">\n                {selectedUser && selectedUser.avatar ? (\n                    <img\n                        src={selectedUser.avatar}\n                        alt=\"\"\n                        className=\"me-2 rounded-circle\"\n                        height=\"48\"\n                    />\n                ) : (\n                    <div className=\"avatar-sm fw-bold d-inline-block\">\n                        <span\n                            className={`avatar-title rounded-circle bg-soft-success text-sucess`}>\n                        </span>\n                    </div>\n                )}\n                <img src={selectedUser == undefined ? \"\" : selectedUser.avatar} className=\"me-2 rounded-circle\" height=\"48\" alt=\"\" />\n                <div>\n                    <h5 className=\"mt-0 mb-0 fs-14\" dir=\"ltr\">{selectedUser == undefined ? \"\" : selectedUser.name}</h5>\n                    <p className=\"mb-0\">{selectedUser == undefined ? \"\" : selectedUser.userStatus}</p>\n                </div>\n                <div className=\"flex-grow-1\">\n                    <ul className=\"list-inline float-end mb-0\">\n                        {/* <Dropdown as=\"li\" className=\"list-inline-item fs-18 me-3\">\n                            <Dropdown.Toggle id=\"dropdown-apps\" as=\"a\" className=\"cursor-pointer text-dark\">\n                                <i className=\"bi bi-telephone-plus\" onClick={() => handleVoicelModalShow()}></i>\n                            </Dropdown.Toggle>\n                        </Dropdown>\n\n                        <Dropdown as=\"li\" className=\"list-inline-item fs-18 me-3\">\n                            <Dropdown.Toggle id=\"dropdown-apps\" as=\"a\" className=\"cursor-pointer text-dark\">\n                                <i className=\"bi bi-camera-video\" onClick={() => handleVideocallModalShow()}></i>\n                            </Dropdown.Toggle>\n                        </Dropdown> */}\n\n                        {/* <Dropdown as=\"li\" className=\"list-inline-item fs-18\">\n                            <Dropdown.Toggle id=\"dropdown-apps\" as=\"a\" className=\"cursor-pointer text-dark\">\n                                <i className=\"bi bi-three-dots-vertical\"></i>\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu className=\"dropdown-menu-end\">\n                                <Dropdown.Item href=\"#/\" onClick={() => handleProfileModalShow()}>\n                                    {' '}\n                                    <i className=\"bi bi-person-circle fs-18 me-2\"></i>View Profile\n                                </Dropdown.Item>\n                                <Dropdown.Item href=\"#/\">\n                                    <i className=\"bi bi-music-note-list fs-18 me-2\"></i>Media, Links and Docs\n                                </Dropdown.Item>\n                                <Dropdown.Item href=\"#/\">\n                                    <i className=\"bi bi-search fs-18 me-2\"></i>Search\n                                </Dropdown.Item>\n                                <Dropdown.Item href=\"#/\">\n                                    <i className=\"bi bi-image fs-18 me-2\"></i>Wallpaper\n                                </Dropdown.Item>\n                                <Dropdown.Item href=\"#/\">\n                                    <i className=\"bi bi-arrow-right-circle fs-18 me-2\"></i>More\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown> */}\n                    </ul>\n                </div>\n            </div>\n\n            {/* Profile Modal */}\n            <ProfileModal show={showProfileModal} handleClose={handleProfileModalClose} />\n\n            {/* video call Modal */}\n            <VideocallModal show={showVideocallModal} handleClose={handleVideocallModalClose} />\n\n            {/* Voice call Modal */}\n            <VoicecallModal show={showVoicelModal} handleClose={handleVoicelModalClose} />\n        </>\n    );\n};\n\ninterface UserMessageProps {\n    message: MessageItem;\n    toUser: ChatUserType;\n}\n// user messages\nconst UserMessage = ({ message, toUser }: UserMessageProps) => {\n\n    const  validURL = (str : string) => {\n        let pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n          '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n          '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n          '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n          '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n          '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n        return !!pattern.test(str);\n      }\n\n    return (\n        <>\n            {(message.messages || []).map((item, index) => {\n                return (\n                    <li\n                        key={index}\n                        className={classNames('clearfix', {\n                            odd: message.from.id === toUser.id,\n                            'mb-1': message.messages.length > 1 && index !== message.messages.length - 1,\n                        })}>\n                        <div className=\"conversation-text ms-0\">\n                            <div\n                                className={classNames('d-flex', {\n                                    'justify-content-end': message.from.id === toUser.id,\n                                })}>\n                                {/* {message.from.id === toUser.id && (\n                                    <Dropdown className=\"conversation-actions\">\n                                        <Dropdown.Toggle as=\"a\" className=\"cursor-pointer text-dark pe-1\">\n                                            <i className=\"bi bi-three-dots-vertical fs-14\"></i>\n                                        </Dropdown.Toggle>\n                                        <Dropdown.Menu align=\"end\">\n                                            <Dropdown.Item>\n                                                <i className=\"bi bi-reply fs-18 me-2\"></i>Reply\n                                            </Dropdown.Item>\n                                            <Dropdown.Item>\n                                                <i className=\"bi bi-star fs-18 me-2\"></i>Reply\n                                            </Dropdown.Item>\n                                            <Dropdown.Item>\n                                                <i className=\"bi bi-trash fs-18 me-2\"></i>Delete\n                                            </Dropdown.Item>\n                                            <Dropdown.Item>\n                                                <i className=\"bi bi-files fs-18 me-2\"></i>Copy\n                                            </Dropdown.Item>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                )} */}\n\n                                {item.type === 'text' && (\n                                    <div className=\"ctext-wrap\">\n                                        {\n                                            validURL(item.value) == true ? <a href={\"http://\"+item.value}>{item.value}</a> : item.value\n                                        }\n                                        \n                                    </div>\n                                )}\n\n                                {item.type === 'file' && (\n                                    <Card className=\"mb-1 shadow-none border text-start\">\n                                        <div className=\"p-2\">\n                                            <Row className=\"align-items-center\">\n                                                <Col className=\"col-auto\">\n                                                    <div className=\"avatar-sm bg-primary text-white\">\n                                                        <span className=\"avatar-title rounded\">.File</span>\n                                                    </div>\n                                                </Col>\n                                                <Col className=\"ps-0\">\n                                                    <a href={item.value} className=\"text-muted fw-bold\">\n                                                        {item.value}\n                                                    </a>\n                                                    <p className=\"mb-0\">{item.value.size}</p>\n                                                </Col>\n                                                <Col className=\"col-auto\">\n                                                    <Link to={item.value} className=\"ps-3 fs-24\">\n                                                        <i className=\"bi bi-arrow-down-square\"></i>\n                                                    </Link>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </Card>\n                                )}\n\n                                {/* {message.from.id !== toUser.id && (\n                                    <Dropdown className=\"conversation-actions\">\n                                        <Dropdown.Toggle as=\"a\" className=\"cursor-pointer text-dark ps-1\">\n                                            <i className=\"bi bi-three-dots-vertical fs-14\"></i>\n                                        </Dropdown.Toggle>\n                                        <Dropdown.Menu align=\"start\">\n                                            <Dropdown.Item>\n                                                <i className=\"bi bi-reply fs-18 me-2\"></i>Reply\n                                            </Dropdown.Item>\n                                            <Dropdown.Item>\n                                                <i className=\"bi bi-star fs-18 me-2\"></i>Reply\n                                            </Dropdown.Item>\n                                            <Dropdown.Item>\n                                                <i className=\"bi bi-trash fs-18 me-2\"></i>Delete\n                                            </Dropdown.Item>\n                                            <Dropdown.Item>\n                                                <i className=\"bi bi-files fs-18 me-2\"></i>Copy\n                                            </Dropdown.Item>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                )} */}\n                            </div>\n                            {index === message.messages.length - 1 && (\n                                <p className=\"text-muted fs-12 mb-0 mt-1\">\n                                    {message.sendOn}\n                                    {message.from.id === toUser.id && (\n                                        <i className=\"bi bi-check2-all ms-1 text-success\"></i>\n                                    )}\n                                </p>\n                            )}\n                        </div>\n                    </li>\n                );\n            })}\n        </>\n    );\n};\n\ninterface ChatAreaProps {\n    selectedUser: ChatUserType;\n    admin : ChatUserType;\n    setUser : (value: ChatUserType[]) => void;\n    user : ChatUserType[];\n    scrollref : any\n}\n\n// ChatArea\nconst ChatArea = ({ selectedUser,admin,setUser,user,scrollref }: ChatAreaProps) => {\n    const [loading, setLoading] = useState<boolean>(false);//show loading\n    const [chatHistory, setChatHistory] = useState<ChatMessage[]>([]);//messages\n    const [real,setreal] = useState<any[]>([]);//total messages\n    const [files,setfiles] = useState<any[]>([]);//store files\n    const scrollreflocal =  useRef<any>(); //scroll component\n\n    const [showModal, setModal] = useState<boolean>(false);//modal controller\n\n    const [flag,setflag] = useState<boolean>(false);\n    \n\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    /**\n     * Auto scroll to Bottom\n     */\n    const scrollBottom = () => {\n        if (scrollreflocal.current !== null) {\n            scrollreflocal.current.scrollIntoView();\n        }\n    }\n\n    /**\n     * 2 July 2022 format date \n     */\n    const getDateStr = (timedate : any) => {\n        const year = timedate.getFullYear();\n        const monthnum = timedate.getMonth();\n        const month = months[monthnum];\n        const date = timedate.getDate();\n\n        const timespan = month +\" \"+ date + \" \"+ year;\n        return timespan;\n    }\n\n    const toUser = {\n        id : admin.id,\n        name : admin.name\n    }\n\n    useEffect(() => {\n        \n        fetchData();\n    },[admin]);\n\n    /**\n     * Fetch messages in real time\n     */\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            fetchData();\n        },100)\n        return () => {\n\n            clearTimeout(timer);\n        };\n        \n    },[chatHistory]);\n    \n    useEffect(() => {\n        scrollBottom();\n    },[flag])\n    /**\n     * Body of get message data\n     * @returns \n     */\n    const fetchData = () => {\n        if (selectedUser == undefined) return;\n        const chatId = selectedUser.id;\n        let fetchemailurl;\n        if (chatId != '') {\n             fetchemailurl = `https://api.chat-api.com/instance${API_Key.instance}/messages?chatId=${chatId}@c.us&token=${API_Key.token}`;\n        }else{\n             fetchemailurl = `https://api.chat-api.com/instance${API_Key.instance}/messages?token=${API_Key.token}`;\n        }\n        fetch(fetchemailurl)\n        .then((res)=> res.json())\n        .then((json)=>{\n            const total = [...json.messages];\n            let from : ChatUserType;\n            let to : ChatUserType;\n            let messages : MessageItem[] = [];\n            let dates : string[] = [];\n            total.sort((a : any,b : any) => a.time - b.time);\n            for (let i = 0; i < total.length; i++) {\n                const time = total[i].time;\n\n                const timedate = new Date(time*1000);\n                const nowdate = new Date();\n                \n                let timespan = getDateStr(timedate);\n                let hour = timedate.getHours();\n                let min = String(timedate.getMinutes());\n                let tmp = \" AM\";\n                let hourtxt = String(hour);\n                if (hour > 12) {\n                    hour -= 12;\n                    tmp = \" PM\";\n                }\n                if (min.length == 1) {\n                    min = \"0\" + min;\n                }\n\n                if (getDateStr(timedate) == getDateStr(nowdate)) {\n                    timespan = \"Today\";\n                }\n\n                if (dates.indexOf(timespan) == -1) {\n                    dates.push(timespan);  \n                }\n                // create message\n                let user : ChatUserType = {\n                    id : total[i]['chatName'],\n                    name : total[i]['senderName'],\n                    userStatus : \"online\"\n                }\n                if(total[i]['fromMe'] == 1){\n\n                    from = admin;\n                    to = user;\n                }else{\n                    from = user;\n                    to = admin;\n                }\n                let mes : MessageItem = {\n                    id : i,\n                    from : from,\n                    to : to,\n                    sendOn : hourtxt + \" : \" + min + tmp,\n                    messages  : [{\n                        type : total[i].type == 'chat' ? 'text' : 'file',\n                        value : total[i].body,\n                    }],\n                    sendDate : timespan\n                }\n                messages.push(mes);\n            }\n            let chatmessages : ChatMessage[] = [];\n            for (let i = 0; i < dates.length; i++) {\n                let dateMessage : MessageItem[] = [];\n                dateMessage = messages.filter((mes) => (mes.sendDate == dates[i]));\n                chatmessages.push({\n                    id : i,\n                    day : dates[i],\n                    messages : dateMessage\n                });\n            }\n            \n            const tmp = [...chatHistory];\n            console.log(tmp);\n            if (chatHistory.length == 0) {\n                setflag(true);\n            }else{\n                if (chatmessages[chatmessages.length - 1].messages.length != tmp[tmp.length - 1].messages.length) {\n                    setflag(true);\n                }else{\n                    setflag(false)\n                }\n            }\n            setChatHistory(chatmessages);\n        })\n    }\n    \n    const onFileUpload = (files : any) => {\n        setfiles(files);\n    }\n\n    /*\n     *  Fetches the messages for selected user\n     */\n    const getMessagesForUser = useCallback(() => {\n        if (selectedUser) {\n            setTimeout(() => {\n                fetchData();\n                // const modifiedChatHistory = [...chatHistory].map((record) => {\n                //     const test = {\n                //         id: record.id,\n                //         day: record.day,\n                //         messages: [...record.messages].filter(\n                //             (m) =>\n                //                 (m.to.id === admin.id && m.from.id === selectedUser.id) ||\n                //                 (admin.id === m.from.id && m.to.id === selectedUser.id)\n                //         ),\n                //     };\n                //     return test;\n                // });\n                // modifiedChatHistory.filter((mes) => mes.messages.length);\n                // setChatHistory([...modifiedChatHistory]);\n                // fetchData(selectedUser.id);\n                setLoading(false);\n            }, 750);\n        }\n    }, [selectedUser]);\n\n    // useEffect(() => {\n    //     getMessagesForUser();\n    // }, [getMessagesForUser]);\n\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            newMessage: yup.string().required('אנא רשום את הודעתך'),\n        })\n    );\n\n    \n\n    /*\n     * form methods\n     */\n    const methods = useForm({ resolver: schemaResolver });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n        reset,\n    } = methods;\n\n    /**\n     * sends the chat message\n     */\n    const sendChatMessage = (values: { newMessage: string }) => {\n        const now = new Date();\n        const nowstr = getDateStr(now);\n\n        const fetchUrl = `https://api.chat-api.com/instance${API_Key.instance}/sendMessage?token=${API_Key.token}`;\n        const dData = {body : values['newMessage'], phone : selectedUser.id};\n\n        fetch(fetchUrl, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json'\n              // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(dData) // body data type must match \"Content-Type\" header\n          })\n          .then(res => {\n                // props.history.push(\"/apps/email/inbox\")\n                console.log(res);\n          })\n\n        // let newUserMessages = [...chatHistory[chatHistory.length - 1].messages];\n        // newUserMessages.push({\n        //     id: chatHistory[chatHistory.length - 1].messages.length + 1,\n        //     from: toUser,\n        //     to: selectedUser,\n        //     messages: [{ type: 'text', value: values['newMessage'] }],\n        //     sendOn: new Date().getHours() + ':' + new Date().getMinutes(),\n        // });\n        // let modifiedChatHistory = [...chatHistory].map((record, index) => {\n        //     const test = {\n        //         id: record.id,\n        //         day: record.day,\n        //         messages: index === chatHistory.length - 1 ? newUserMessages : record.messages,\n        //     };\n        //     return test;\n        // });\n\n        // let check = [...chatHistory].filter((m) => m.day == nowstr);\n        // if (check.length == 0) {\n        //     newUserMessages = [];\n        //     newUserMessages.push({\n        //         id: 1,\n        //         from: toUser,\n        //         to: selectedUser,\n        //         messages: [{ type: 'text', value: values['newMessage'] }],\n        //         sendOn: new Date().getHours() + ':' + new Date().getMinutes(),\n        //     });\n        //     modifiedChatHistory = [...chatHistory];\n        //     modifiedChatHistory.push({\n        //         id : chatHistory.length,\n        //         day : nowstr,\n        //         messages : newUserMessages\n        //     });\n        // }\n\n        \n        // setChatHistory([...modifiedChatHistory]);\n        reset();\n    };\n\n    const sendfile = async () => {\n        \n        for (let i = 0; i < files.length; i++) {\n            const dData = {body : files[i],filename : files[i]['name'], phone : selectedUser.id};\n            const formData = new FormData();\n            dData['body'] = await getBase64(files[i]);\n            send(dData);\n        }\n        \n    }\n\n    const send = async (senddata : any) => {\n        const fetchUrl = `https://api.chat-api.com/instance${API_Key.instance}/sendFile?token=${API_Key.token}`;\n\n        const result = await fetch(fetchUrl, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json'\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            //   'Content-Type': 'multipart/form-data',\n\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(senddata)  // body data type must match \"Content-Type\" header\n          });\n          console.log(result);\n            \n    }\n\n    const getBase64 = async (file : any) => {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(file);\n          reader.onload = () => resolve(reader.result);\n          reader.onerror = error => reject(error);\n        });\n      }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    {loading && <Loader />}\n                    <ChatHeader selectedUser={selectedUser} />\n\n                    <div className=\"mt-1\">\n                        <Scrollbar style={{ height: '509px', width: '100%' }}>\n                            <ul className=\"conversation-list px-0 h-100\">\n                                {(chatHistory || []).map((item, index) => {\n                                    return (\n                                        <React.Fragment key={index}>\n                                            <li className=\"position-relative\">\n                                                <hr />\n                                                <h4>\n                                                    <span className=\"badge bg-light text-dark position-absolute top-0 start-50 translate-middle\">\n                                                        {item.day}\n                                                    </span>\n                                                </h4>\n                                            </li>\n                                            {(item.messages || []).map((message, index) => {\n                                                // console.log(message);\n                                                return <UserMessage key={index} message={message} toUser={toUser} />;\n                                            })}\n                                        </React.Fragment>\n                                    );\n                                })}\n                            </ul>\n                            <div ref={scrollreflocal}></div>\n                        </Scrollbar>\n                        {/* handle submited message */}\n                        <div className=\"mt-2 bg-light p-3 rounded\">\n                            <form noValidate name=\"chat-form\" id=\"chat-form\" onSubmit={handleSubmit(sendChatMessage)}>\n                                <div className=\"row\">\n                                    <div className=\"col mb-2 mb-sm-0\">\n                                        <FormInput\n                                            type=\"text\"\n                                            name=\"newMessage\"\n                                            className=\"border-0\"\n                                            placeholder=\"Enter your text\"\n                                            register={register}\n                                            key=\"newMessage\"\n                                            errors={errors}\n                                            control={control}\n                                        />\n                                    </div>\n                                    <div className=\"col-sm-auto\" >\n                                        <div className=\"btn-group\">\n                                            {/* <Link to=\"#\" className=\"btn btn-light\">\n                                                <i className=\"bi bi-emoji-smile fs-18\"></i>\n                                            </Link> */}\n                                            <div className=\"btn btn-light\" onClick={() => setModal(true)}>\n                                                <i className=\"bi bi-paperclip fs-18\"></i>\n                                            </div>\n                                            {/* <Link to=\"#\" className=\"btn btn-light\">\n                                                <i className=\"bi bi-camera fs-18\"></i>\n                                            </Link> */}\n                                            <button type=\"submit\" className=\"btn btn-success chat-send\">\n                                                <i className=\"uil uil-message\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </Card.Body>\n            </Card>\n            <Modal show={showModal} onHide={() => setModal(false)} centered>\n                <Modal.Header onHide={() => setModal(false)} closeButton>\n                    <Modal.Title as=\"h5\">Error modal</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"text-center\">\n                    <FileUploader\n                        onFileUpload={(files) => onFileUpload(files)}\n                    />\n                    <div className=\"mt-4\">\n                        <Link\n                            to=\"#\"\n                            className=\"btn btn-outline-primary rounded-pill width-md\"\n                            onClick={() => sendfile()}>\n                            <i className=\"uil uil-arrow-right me-1\"></i> Submit\n                        </Link>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default ChatArea;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\flyingcarpet\\\\flyingcarpet-shared-inbox\\\\src\\\\pages\\\\dashboard\\\\Ecommerce\\\\RevenueChart.tsx\";\nimport React from 'react';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RevenueChart = () => {\n  function getDaysInMonth(month, year) {\n    var date = new Date(year, month, 1);\n    var days = [];\n    var idx = 0;\n\n    while (date.getMonth() === month && idx < 15) {\n      var d = new Date(date);\n      days.push(d.getDate() + ' ' + d.toLocaleString('en-us', {\n        month: 'short'\n      }));\n      date.setDate(date.getDate() + 1);\n      idx += 1;\n    }\n\n    return days;\n  }\n\n  const now = new Date();\n  const labels = getDaysInMonth(now.getMonth(), now.getFullYear());\n  const apexBarChartOpts = {\n    chart: {\n      height: 329,\n      type: 'area',\n      toolbar: {\n        show: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    tooltip: {\n      theme: 'dark',\n      x: {\n        show: false\n      }\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 4\n    },\n    series: [{\n      name: 'Revenue',\n      data: [10, 20, 5, 15, 10, 20, 15, 25, 20, 30, 25, 40, 30, 50, 35]\n    }],\n    legend: {\n      show: false\n    },\n    colors: ['#43d39e'],\n    xaxis: {\n      type: 'category',\n      categories: labels,\n      tooltip: {\n        enabled: false\n      },\n      axisBorder: {\n        show: false\n      },\n      labels: {}\n    },\n    yaxis: {\n      labels: {\n        formatter: val => {\n          return val + 'k';\n        }\n      }\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.45,\n        opacityTo: 0.05,\n        stops: [45, 100]\n      }\n    }\n  };\n  const apexBarChartData = [{\n    name: 'Revenue',\n    data: [10, 20, 5, 15, 10, 20, 15, 25, 20, 30, 25, 40, 30, 50, 35]\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"float-end\",\n        align: \"end\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          as: \"a\",\n          className: \"arrow-none text-muted cursor-pointer\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"uil uil-ellipsis-v\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"7 Days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"15 Days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"1 Months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"6 Months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"1 Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title mb-0 header-title\",\n        children: \"Revenue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        options: apexBarChartOpts,\n        series: apexBarChartData,\n        type: \"area\",\n        className: \"apex-charts mt-3\",\n        height: 329,\n        dir: \"ltr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RevenueChart;\nexport default RevenueChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"RevenueChart\");","map":{"version":3,"sources":["D:/workspace/flyingcarpet/flyingcarpet-shared-inbox/src/pages/dashboard/Ecommerce/RevenueChart.tsx"],"names":["React","Card","Dropdown","Chart","RevenueChart","getDaysInMonth","month","year","date","Date","days","idx","getMonth","d","push","getDate","toLocaleString","setDate","now","labels","getFullYear","apexBarChartOpts","chart","height","type","toolbar","show","dataLabels","enabled","tooltip","theme","x","stroke","curve","width","series","name","data","legend","colors","xaxis","categories","axisBorder","yaxis","formatter","val","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","apexBarChartData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, Dropdown } from 'react-bootstrap';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\nconst RevenueChart = () => {\r\n    function getDaysInMonth(month: any, year: any) {\r\n        var date = new Date(year, month, 1);\r\n        var days = [];\r\n        var idx = 0;\r\n        while (date.getMonth() === month && idx < 15) {\r\n            var d = new Date(date);\r\n            days.push(d.getDate() + ' ' + d.toLocaleString('en-us', { month: 'short' }));\r\n            date.setDate(date.getDate() + 1);\r\n            idx += 1;\r\n        }\r\n        return days;\r\n    }\r\n\r\n    const now = new Date();\r\n    const labels = getDaysInMonth(now.getMonth(), now.getFullYear());\r\n\r\n    const apexBarChartOpts: ApexOptions = {\r\n        chart: {\r\n            height: 329,\r\n            type: 'area',\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        tooltip: {\r\n            theme: 'dark',\r\n            x: {\r\n                show: false,\r\n            },\r\n        },\r\n        stroke: {\r\n            curve: 'smooth',\r\n            width: 4,\r\n        },\r\n        series: [\r\n            {\r\n                name: 'Revenue',\r\n                data: [10, 20, 5, 15, 10, 20, 15, 25, 20, 30, 25, 40, 30, 50, 35],\r\n            },\r\n        ],\r\n        legend: {\r\n            show: false,\r\n        },\r\n        colors: ['#43d39e'],\r\n        xaxis: {\r\n            type: 'category',\r\n            categories: labels,\r\n            tooltip: {\r\n                enabled: false,\r\n            },\r\n            axisBorder: {\r\n                show: false,\r\n            },\r\n            labels: {},\r\n        },\r\n        yaxis: {\r\n            labels: {\r\n                formatter: (val: number) => {\r\n                    return val + 'k';\r\n                },\r\n            },\r\n        },\r\n        fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n                type: 'vertical',\r\n                shadeIntensity: 1,\r\n                inverseColors: false,\r\n                opacityFrom: 0.45,\r\n                opacityTo: 0.05,\r\n                stops: [45, 100],\r\n            },\r\n        },\r\n    };\r\n\r\n    const apexBarChartData = [\r\n        {\r\n            name: 'Revenue',\r\n            data: [10, 20, 5, 15, 10, 20, 15, 25, 20, 30, 25, 40, 30, 50, 35],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Dropdown className=\"float-end\" align=\"end\">\r\n                    <Dropdown.Toggle as=\"a\" className=\"arrow-none text-muted cursor-pointer\">\r\n                        <i className=\"uil uil-ellipsis-v\"></i>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item>Today</Dropdown.Item>\r\n                        <Dropdown.Item>7 Days</Dropdown.Item>\r\n                        <Dropdown.Item>15 Days</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item>1 Months</Dropdown.Item>\r\n                        <Dropdown.Item>6 Months</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item>1 Year</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                <h5 className=\"card-title mb-0 header-title\">Revenue</h5>\r\n\r\n                <Chart\r\n                    options={apexBarChartOpts}\r\n                    series={apexBarChartData}\r\n                    type=\"area\"\r\n                    className=\"apex-charts mt-3\"\r\n                    height={329}\r\n                    dir=\"ltr\"\r\n                />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RevenueChart;\r\n"]},"metadata":{},"sourceType":"module"}
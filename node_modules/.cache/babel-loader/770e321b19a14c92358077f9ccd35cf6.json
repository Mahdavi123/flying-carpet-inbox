{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\flying-assess\\\\flyingcarpet-shared-inbox\\\\src\\\\pages\\\\apps\\\\Chat\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col } from 'react-bootstrap'; // components\n\nimport PageTitle from '../../../components/PageTitle';\nimport ChatUsers from './ChatUsers';\nimport ChatArea from './ChatArea'; // dummy data\n\nimport { USERS } from './data'; // ChatApp\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatApp = () => {\n  _s();\n\n  const [selectedUser, setSelectedUser] = useState(USERS[1]);\n  /**\r\n   * On user change\r\n   */\n\n  const onUserChange = user => {\n    setSelectedUser(user);\n  };\n\n  const token = \"3px6cypvje3xsjmc\";\n  const instance = \"7827\";\n  /**\r\n   * get emails from your whatsapp\r\n   */\n\n  const fetchemailurl = \"https://api.chat-api.com/instance7827/messages?token=3px6cypvje3xsjmc\";\n  useEffect(() => {\n    console.log(66);\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    fetch(fetchemailurl).then(res => res.json()).then(json => {\n      let total = json.messages;\n      total.sort((a, b) => b.time - a.time);\n      console.log(total);\n      let tempdata = [];\n      let userdata = [];\n\n      for (let i = 0; i < total.length; i++) {\n        if (tempdata.indexOf(total[i]['chatId']) == -1) {\n          tempdata.push(total[i]['chatId']);\n          let user = {\n            id: i,\n            name: total[i]['chatName'],\n            variant: \"success\",\n            message: \"Hi,there?\"\n          };\n          userdata.push(user);\n        }\n      }\n\n      console.log(total);\n      setchatUsers(userdata);\n      setEmailList([...display]);\n      setotherEmails([...total]);\n      settotalEmails(total.length);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      breadCrumbItems: [{\n        label: 'Apps',\n        path: '/apps/chat'\n      }, {\n        label: 'Chat',\n        path: '/apps/chat',\n        active: true\n      }],\n      title: 'Chat'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 5,\n        xxl: 3,\n        children: /*#__PURE__*/_jsxDEV(ChatUsers, {\n          onUserSelect: onUserChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 7,\n        xxl: 9,\n        children: /*#__PURE__*/_jsxDEV(ChatArea, {\n          selectedUser: selectedUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatApp, \"A+RAO4Ym4TDi58bDXMNpN+NS9Fg=\");\n\n_c = ChatApp;\nexport default ChatApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"sources":["D:/workspace/flying-assess/flyingcarpet-shared-inbox/src/pages/apps/Chat/index.tsx"],"names":["React","useState","useEffect","Row","Col","PageTitle","ChatUsers","ChatArea","USERS","ChatApp","selectedUser","setSelectedUser","onUserChange","user","token","instance","fetchemailurl","console","log","fetchData","fetch","then","res","json","total","messages","sort","a","b","time","tempdata","userdata","i","length","indexOf","push","id","name","variant","message","setchatUsers","setEmailList","display","setotherEmails","settotalEmails","label","path","active"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n// components\r\nimport PageTitle from '../../../components/PageTitle';\r\n\r\nimport ChatUsers from './ChatUsers';\r\nimport ChatArea from './ChatArea';\r\n// dummy data\r\nimport { USERS, ChatUserType, ChatUserTypes } from './data';\r\n\r\n// ChatApp\r\nconst ChatApp = () => {\r\n    const [selectedUser, setSelectedUser] = useState<ChatUserType>(USERS[1]);\r\n\r\n    /**\r\n     * On user change\r\n     */\r\n    const onUserChange = (user: ChatUserType) => {\r\n        setSelectedUser(user);\r\n    };\r\n    const token = \"3px6cypvje3xsjmc\";\r\n    const instance = \"7827\";\r\n    /**\r\n     * get emails from your whatsapp\r\n     */\r\n    const fetchemailurl = \"https://api.chat-api.com/instance7827/messages?token=3px6cypvje3xsjmc\";\r\n    \r\n    useEffect(() => {\r\n        console.log(66);\r\n        fetchData()\r\n    },[])\r\n\r\n    \r\n    const fetchData = () => {\r\n        fetch(fetchemailurl)\r\n        .then((res)=> res.json())\r\n        .then((json)=>{\r\n            let total = json.messages;\r\n            total.sort((a : any,b : any) => b.time - a.time);\r\n            console.log(total);\r\n            let tempdata = [];\r\n            let userdata : ChatUserTypes[] = [];\r\n\r\n            for (let i = 0; i < total.length; i++) {\r\n                if (tempdata.indexOf(total[i]['chatId']) == -1) {\r\n                    tempdata.push(total[i]['chatId']);\r\n                    let user : ChatUserTypes = {\r\n                        id : i,\r\n                        name : total[i]['chatName'],\r\n                        variant : \"success\",\r\n                        message : \"Hi,there?\"\r\n                    };\r\n                    userdata.push(user)\r\n                }\r\n            }\r\n            console.log(total);\r\n            setchatUsers(userdata);\r\n            setEmailList([...display]);\r\n            setotherEmails([...total]);\r\n            settotalEmails(total.length);\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Apps', path: '/apps/chat' },\r\n                    { label: 'Chat', path: '/apps/chat', active: true },\r\n                ]}\r\n                title={'Chat'}\r\n            />\r\n\r\n            <Row>\r\n                <Col lg={5} xxl={3}>\r\n                    <ChatUsers onUserSelect={onUserChange} />\r\n                </Col>\r\n                <Col lg={7} xxl={9}>\r\n                    <ChatArea selectedUser={selectedUser} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatApp;\r\n"]},"metadata":{},"sourceType":"module"}
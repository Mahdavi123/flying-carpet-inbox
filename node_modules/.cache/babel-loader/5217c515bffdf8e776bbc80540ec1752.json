{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\flying-assess\\\\flyingcarpet-shared-inbox\\\\src\\\\components\\\\Pagination.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pagination = ({\n  tableProps,\n  sizePerPageList\n}) => {\n  _s();\n\n  /**\r\n   * pagination count , index\r\n   */\n  const [pageCount, setPageCount] = useState(tableProps.pageCount);\n  const [pageIndex, setPageIndex] = useState(tableProps.state.pageIndex);\n  useEffect(() => {\n    setPageCount(tableProps.pageCount);\n    setPageIndex(tableProps.state.pageIndex);\n  }, [tableProps.pageCount, tableProps.state.pageIndex]);\n  /**\r\n   * get filter pages\r\n   */\n\n  const filterPages = useCallback((visiblePages, totalPages) => {\n    return visiblePages.filter(page => page <= pageCount);\n  }, [pageCount]);\n  /**\r\n   * handle visible pages\r\n   */\n\n  const getVisiblePages = useCallback((page, total) => {\n    if (total < 7) {\n      return filterPages([1, 2, 3, 4, 5, 6], total);\n    } else {\n      if (page % 5 >= 0 && page > 4 && page + 2 < total) {\n        return [1, page - 1, page, page + 1, total];\n      } else if (page % 5 >= 0 && page > 4 && page + 2 >= total) {\n        return [1, total - 3, total - 2, total - 1, total];\n      } else {\n        return [1, 2, 3, 4, 5, total];\n      }\n    }\n  }, [filterPages]);\n  /**\r\n   * handle page change\r\n   * @param page - current page\r\n   * @returns\r\n   */\n\n  const changePage = page => {\n    const activePage = pageIndex + 1;\n\n    if (page === activePage) {\n      return;\n    }\n\n    const visiblePages = getVisiblePages(page, pageCount);\n    setVisiblePages(filterPages(visiblePages, pageCount));\n    tableProps.gotoPage(page - 1);\n  };\n\n  useEffect(() => {\n    const visiblePages = getVisiblePages(null, pageCount);\n    setVisiblePages(visiblePages);\n  }, [pageCount, getVisiblePages]);\n  const [visiblePages, setVisiblePages] = useState(getVisiblePages(null, pageCount));\n  const activePage = pageIndex + 1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-lg-flex align-items-center text-center pb-1\",\n      children: [sizePerPageList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-inline-block me-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"me-1\",\n          children: \"Display :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: tableProps.state.pageSize,\n          onChange: e => {\n            tableProps.setPageSize(Number(e.target.value));\n          },\n          className: \"form-select d-inline-block w-auto\",\n          children: (sizePerPageList || []).map((pageSize, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: pageSize.value,\n              children: pageSize.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"me-3\",\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", tableProps.pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-inline-block align-items-center text-sm-start text-center my-sm-0 my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Go to page : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: pageIndex + 1,\n          min: \"1\",\n          onChange: e => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n            tableProps.gotoPage(page);\n            setPageIndex(tableProps.state.pageIndex);\n          },\n          className: \"form-control w-25 ms-1 d-inline-block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination pagination-rounded d-inline-flex ms-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: classNames('page-item', 'paginate_button', 'previous', {\n            disabled: activePage === 1\n          }),\n          onClick: () => {\n            if (activePage === 1) return;\n            changePage(activePage - 1);\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: \"page-link\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"uil uil-angle-left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, \"prevpage\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), (visiblePages || []).map((page, index, array) => {\n          return array[index - 1] + 1 < page ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"page-item disabled d-none d-xl-inline-block\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                className: \"page-link\",\n                children: \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: classNames('page-item', 'd-none', 'd-xl-inline-block', {\n                active: activePage === page\n              }),\n              onClick: e => changePage(page),\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                className: \"page-link\",\n                children: page\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)]\n          }, page, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n            className: classNames('page-item', 'd-none', 'd-xl-inline-block', {\n              active: activePage === page\n            }),\n            onClick: e => changePage(page),\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              className: \"page-link\",\n              children: page\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this)\n          }, page, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classNames('page-item', 'paginate_button', 'next', {\n            disabled: activePage === tableProps.pageCount\n          }),\n          onClick: () => {\n            if (activePage === tableProps.pageCount) return;\n            changePage(activePage + 1);\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: \"page-link\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"uil uil-angle-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, \"nextpage\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Pagination, \"NcBkHwQcpykpjRGH66z8f+KIg2M=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["D:/workspace/flying-assess/flyingcarpet-shared-inbox/src/components/Pagination.tsx"],"names":["React","useCallback","useEffect","useState","Link","classNames","Pagination","tableProps","sizePerPageList","pageCount","setPageCount","pageIndex","setPageIndex","state","filterPages","visiblePages","totalPages","filter","page","getVisiblePages","total","changePage","activePage","setVisiblePages","gotoPage","length","pageSize","e","setPageSize","Number","target","value","map","index","text","pageOptions","disabled","array","active"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\ninterface PaginationProps {\r\n    tableProps: any;\r\n    sizePerPageList: {\r\n        text: string;\r\n        value: number;\r\n    }[];\r\n}\r\n\r\nconst Pagination = ({ tableProps, sizePerPageList }: PaginationProps) => {\r\n    /**\r\n     * pagination count , index\r\n     */\r\n    const [pageCount, setPageCount] = useState<number>(tableProps.pageCount);\r\n    const [pageIndex, setPageIndex] = useState<number>(tableProps.state.pageIndex);\r\n\r\n    useEffect(() => {\r\n        setPageCount(tableProps.pageCount);\r\n        setPageIndex(tableProps.state.pageIndex);\r\n    }, [tableProps.pageCount, tableProps.state.pageIndex]);\r\n\r\n    /**\r\n     * get filter pages\r\n     */\r\n    const filterPages = useCallback(\r\n        (visiblePages: any, totalPages: number) => {\r\n            return visiblePages.filter((page: any) => page <= pageCount);\r\n        },\r\n        [pageCount]\r\n    );\r\n\r\n    /**\r\n     * handle visible pages\r\n     */\r\n    const getVisiblePages = useCallback(\r\n        (page: number | null, total: number) => {\r\n            if (total < 7) {\r\n                return filterPages([1, 2, 3, 4, 5, 6], total);\r\n            } else {\r\n                if (page! % 5 >= 0 && page! > 4 && page! + 2 < total) {\r\n                    return [1, page! - 1, page!, page! + 1, total];\r\n                } else if (page! % 5 >= 0 && page! > 4 && page! + 2 >= total) {\r\n                    return [1, total - 3, total - 2, total - 1, total];\r\n                } else {\r\n                    return [1, 2, 3, 4, 5, total];\r\n                }\r\n            }\r\n        },\r\n        [filterPages]\r\n    );\r\n\r\n    /**\r\n     * handle page change\r\n     * @param page - current page\r\n     * @returns\r\n     */\r\n    const changePage = (page: number) => {\r\n        const activePage = pageIndex + 1;\r\n\r\n        if (page === activePage) {\r\n            return;\r\n        }\r\n\r\n        const visiblePages = getVisiblePages(page, pageCount);\r\n        setVisiblePages(filterPages(visiblePages, pageCount));\r\n\r\n        tableProps.gotoPage(page - 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const visiblePages = getVisiblePages(null, pageCount);\r\n        setVisiblePages(visiblePages);\r\n    }, [pageCount, getVisiblePages]);\r\n\r\n    const [visiblePages, setVisiblePages] = useState<number[]>(getVisiblePages(null, pageCount));\r\n    const activePage: number = pageIndex + 1;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-lg-flex align-items-center text-center pb-1\">\r\n                {sizePerPageList.length > 0 && (\r\n                    <div className=\"d-inline-block me-3\">\r\n                        <label className=\"me-1\">Display :</label>\r\n                        <select\r\n                            value={tableProps.state.pageSize}\r\n                            onChange={(e: any) => {\r\n                                tableProps.setPageSize(Number(e.target.value));\r\n                            }}\r\n                            className=\"form-select d-inline-block w-auto\">\r\n                            {(sizePerPageList || []).map((pageSize, index) => {\r\n                                return (\r\n                                    <option key={index} value={pageSize.value}>\r\n                                        {pageSize.text}\r\n                                    </option>\r\n                                );\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                )}\r\n\r\n                <span className=\"me-3\">\r\n                    Page{' '}\r\n                    <strong>\r\n                        {pageIndex + 1} of {tableProps.pageOptions.length}\r\n                    </strong>{' '}\r\n                </span>\r\n\r\n                <span className=\"d-inline-block align-items-center text-sm-start text-center my-sm-0 my-2\">\r\n                    <label>Go to page : </label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={pageIndex + 1}\r\n                        min=\"1\"\r\n                        onChange={(e: any) => {\r\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                            tableProps.gotoPage(page);\r\n                            setPageIndex(tableProps.state.pageIndex);\r\n                        }}\r\n                        className=\"form-control w-25 ms-1 d-inline-block\"\r\n                    />\r\n                </span>\r\n\r\n                <ul className=\"pagination pagination-rounded d-inline-flex ms-auto\">\r\n                    <li\r\n                        key=\"prevpage\"\r\n                        className={classNames('page-item', 'paginate_button', 'previous', {\r\n                            disabled: activePage === 1,\r\n                        })}\r\n                        onClick={() => {\r\n                            if (activePage === 1) return;\r\n                            changePage(activePage - 1);\r\n                        }}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            <i className=\"uil uil-angle-left\"></i>\r\n                        </Link>\r\n                    </li>\r\n                    {(visiblePages || []).map((page, index, array) => {\r\n                        return array[index - 1] + 1 < page ? (\r\n                            <React.Fragment key={page}>\r\n                                <li className=\"page-item disabled d-none d-xl-inline-block\">\r\n                                    <Link to=\"#\" className=\"page-link\">\r\n                                        ...\r\n                                    </Link>\r\n                                </li>\r\n                                <li\r\n                                    className={classNames('page-item', 'd-none', 'd-xl-inline-block', {\r\n                                        active: activePage === page,\r\n                                    })}\r\n                                    onClick={(e: any) => changePage(page)}>\r\n                                    <Link to=\"#\" className=\"page-link\">\r\n                                        {page}\r\n                                    </Link>\r\n                                </li>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <li\r\n                                key={page}\r\n                                className={classNames('page-item', 'd-none', 'd-xl-inline-block', {\r\n                                    active: activePage === page,\r\n                                })}\r\n                                onClick={(e: any) => changePage(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">\r\n                                    {page}\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                    <li\r\n                        key=\"nextpage\"\r\n                        className={classNames('page-item', 'paginate_button', 'next', {\r\n                            disabled: activePage === tableProps.pageCount,\r\n                        })}\r\n                        onClick={() => {\r\n                            if (activePage === tableProps.pageCount) return;\r\n                            changePage(activePage + 1);\r\n                        }}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            <i className=\"uil uil-angle-right\"></i>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}